diff --git a/.gitignore b/.gitignore
index 56721b7..13ac1b6 100644
--- a/.gitignore
+++ b/.gitignore
@@ -12,3 +12,6 @@ Session.vim
 .vscode
 data/glove.840B.300d.txt
 wandb.ipynb
+conda_envs.yaml
+pyrightFile
+MLP\ using\ Fastai\ \&\ Pytorch.ipynb
diff --git a/config.py b/config.py
index 856403f..9066121 100644
--- a/config.py
+++ b/config.py
@@ -23,7 +23,7 @@ class Config:
     batch_size = 16
     val_split = 0.1  # Percentage of data in validation set from training data
 
-    model = 'lsvc'
+    model = 'fcnn'
     run_name = model
 
     svm_c = 10.0
diff --git a/train.py b/train.py
index 122991c..5415f42 100644
--- a/train.py
+++ b/train.py
@@ -2,8 +2,10 @@ import argparse
 import json
 import os
 import re
-
-import IPython
+# import sys
+# from scipy.sparse.construct import random
+# import IPython
+# import ipdb
 import numpy as np
 from sklearn import svm
 from sklearn.ensemble import RandomForestClassifier
@@ -13,6 +15,15 @@ from sklearn.naive_bayes import GaussianNB
 from sklearn.pipeline import make_pipeline
 from sklearn.preprocessing import FunctionTransformer, StandardScaler
 from sklearn.svm import LinearSVC
+# from fastai.vision import Learner
+from fastai.vision import *
+from fastai import *
+from fastai.vision.learner import Learner
+import torch
+import torch.nn.functional as F
+from torch import nn
+from torch.utils.data import Dataset
+
 import wandb
 
 import config
@@ -20,16 +31,66 @@ from config import CONFIG_BY_KEY
 from data_loader import DataLoader
 from data_loader import DataHelper
 
+# breakpoint()
 # %%wandb
 wandb.login()
 WANDB_NOTEBOOK_NAME = 'train.py'
 
 
+class FullyConnectedNN(nn.Module):
+    def __init__(self):
+        # call constructor from superclass
+        super().__init__()
+
+        # define network layers
+        self.fc1 = nn.Linear(3099, 250, bias=True)
+        self.fc2 = nn.Linear(250, 2, bias=True)
+        # self.fc3 = nn.Linear(120, 2, bias=True)
+
+    def forward(self, xb):
+        # define forward pass
+        x = xb.float()
+        # x = xb.view(250, -1) resize?
+        x = F.relu(self.fc1(x))
+        # x = F.relu(self.fc2(x))
+        x = torch.sigmoid(self.fc2(x))
+        # self.lin3(x)
+        return x
+
+
+class ArrayDataset(Dataset):
+    "Dataset for numpy arrays based on fastai example: "
+
+    def __init__(self, x, y):
+        self.x, self.y = x, y
+        self.c = len(np.unique(y))
+
+    def __len__(self):
+        return len(self.x)
+
+    def __getitem__(self, i):
+        return self.x[i], self.y[i]
+
+
+def fcnn_train(train_input, train_output, databunch):
+    clf = FullyConnectedNN()
+    # print(clf)
+
+    fcnn_learner = Learner(data=databunch,
+                           model=clf,
+                           loss_func=nn.CrossEntropyLoss(),
+                           metrics=accuracy)
+    fcnn_learner.fit_one_cycle(5, 1e-2)
+    breakpoint()
+    return fcnn_learner
+
+
 def lsvc_train(train_input, train_output):
     # clf = make_pipeline(
     # StandardScaler(),
     # svm.SVC(C=config.svm_c, gamma='scale', kernel='rbf'))
     clf = LinearSVC(C=run_config.lsvc_c, max_iter=run_config.lsvc_max_iter)
+    # print(sys.executable)
     return clf.fit(train_input, train_output[:, 1].astype(int))
 
 
@@ -279,6 +340,7 @@ def trainSpeakerDependent(model_name=None):
 
     # Load data
     data = DataLoader(run_config)
+    # breakpoint()
     # labels = ['Non-Sarcastic', 'Sarcastic']
 
     # Iterating over each fold
@@ -293,9 +355,22 @@ def trainSpeakerDependent(model_name=None):
         train_input, train_output, test_input, test_output = trainIO(
             train_index, test_index)
 
+        tensor_train_input = torch.from_numpy(train_input)
+        tensor_train_output = torch.from_numpy(train_output)
+        tensor_test_input = torch.from_numpy(test_input)
+        tensor_test_output = torch.from_numpy(test_output)
+        train_ds = ArrayDataset(tensor_train_input, tensor_train_output)
+        test_ds = ArrayDataset(tensor_test_input, tensor_test_output)
+        bs = 10
+        databunch = DataBunch.create(train_ds, test_ds, bs=bs)
+
+        # breakpoint()
         train_func = CLF_MAP[run_config.model][0]
         # test_func = CLF_MAP[args.clf][1]
-        clf = train_func(train_input, train_output)
+        clf = train_func(train_input, train_output, databunch)
+
+        if run_config.model == 'fcnn':
+            preds, ids = clf.get_preds()
 
         y_pred = clf.predict(test_input)
         # y_probas = clf.predict_proba(test_input)
@@ -309,7 +384,6 @@ def trainSpeakerDependent(model_name=None):
 
         # To generate majority baseline
         # y_pred = [0]*len(y_pred)
-
         # result_str = classification_report(y_true, y_pred, digits=3)
         # print(confusion_matrix(y_true, y_pred))
         # print(result_string)
@@ -377,7 +451,8 @@ CLF_MAP = {
     'lr': [lr_train, lr_test],
     'rfc': [rfc_train, rfc_test],
     'gauss': [gauss_train, gauss_test],
-    'svm': [svm_train, svm_test]
+    'svm': [svm_train, svm_test],
+    'fcnn': [fcnn_train, None]
 }
 
 # a=CLF_MAP['lr'][0]
diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
index d68616c..49df062 120000
--- a/wandb/debug-internal.log
+++ b/wandb/debug-internal.log
@@ -1 +1 @@
-run-20210428_225551-th78is2j/logs/debug-internal.log
\ No newline at end of file
+run-20210517_115335-2yjran55/logs/debug-internal.log
\ No newline at end of file
diff --git a/wandb/debug.log b/wandb/debug.log
index d8b0872..1a4e425 120000
--- a/wandb/debug.log
+++ b/wandb/debug.log
@@ -1 +1 @@
-run-20210428_225551-th78is2j/logs/debug.log
\ No newline at end of file
+run-20210517_115335-2yjran55/logs/debug.log
\ No newline at end of file
diff --git a/wandb/latest-run b/wandb/latest-run
index efe89a9..bc75e79 120000
--- a/wandb/latest-run
+++ b/wandb/latest-run
@@ -1 +1 @@
-run-20210428_225551-th78is2j
\ No newline at end of file
+run-20210517_115335-2yjran55
\ No newline at end of file
diff --git a/wandb/run-20210428_230157-3catyuwf/files/code/train.py b/wandb/run-20210428_230157-3catyuwf/files/code/train.py
new file mode 100644
index 0000000..122991c
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/files/code/train.py
@@ -0,0 +1,415 @@
+import argparse
+import json
+import os
+import re
+
+import IPython
+import numpy as np
+from sklearn import svm
+from sklearn.ensemble import RandomForestClassifier
+from sklearn.linear_model import LogisticRegression
+from sklearn.metrics import classification_report, confusion_matrix
+from sklearn.naive_bayes import GaussianNB
+from sklearn.pipeline import make_pipeline
+from sklearn.preprocessing import FunctionTransformer, StandardScaler
+from sklearn.svm import LinearSVC
+import wandb
+
+import config
+from config import CONFIG_BY_KEY
+from data_loader import DataLoader
+from data_loader import DataHelper
+
+# %%wandb
+wandb.login()
+WANDB_NOTEBOOK_NAME = 'train.py'
+
+
+def lsvc_train(train_input, train_output):
+    # clf = make_pipeline(
+    # StandardScaler(),
+    # svm.SVC(C=config.svm_c, gamma='scale', kernel='rbf'))
+    clf = LinearSVC(C=run_config.lsvc_c, max_iter=run_config.lsvc_max_iter)
+    return clf.fit(train_input, train_output[:, 1].astype(int))
+
+
+def lsvc_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def lr_train(train_input, train_output):
+    # lr = LogisticRegression(solver='saga',
+    #                         max_iter=10000,
+    #                         penalty='elasticnet',
+    #                         l1_ratio=1)
+    lr = LogisticRegression()
+    return lr.fit(train_input, train_output[:, 1].astype(int))
+
+
+def lr_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    print(confusion_matrix(y_true, y_pred))
+    print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def svm_train(train_input, train_output):
+    clf = make_pipeline(
+        StandardScaler() if run_config.svm_scale else FunctionTransformer(
+            lambda x: x, validate=False),
+        svm.SVC(C=run_config.svm_c,
+                gamma=run_config.svm_gamma,
+                kernel=run_config.svm_kernel))
+
+    return clf.fit(train_input, np.argmax(train_output, axis=1))
+
+
+def svm_test(clf, test_input, test_output):
+
+    probas = clf.predict(test_input)
+    y_pred = probas
+    y_true = np.argmax(test_output, axis=1)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def gauss_train(train_input, train_output):
+    gnb = GaussianNB()
+    return gnb.fit(train_input, train_output[:, 1].astype(int))
+
+
+def gauss_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def rfc_train(train_input, train_output):
+    rfc = RandomForestClassifier(n_estimators=10, random_state=0)
+    return rfc.fit(train_input, train_output[:, 1].astype(int))
+
+
+def rfc_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def trainIO(train_index, test_index):
+
+    # Prepare data
+    train_input, train_output = data.getSplit(train_index)
+    test_input, test_output = data.getSplit(test_index)
+
+    datahelper = DataHelper(train_input, train_output, test_input, test_output,
+                            run_config, data)
+
+    train_input = np.empty((len(train_input), 0))
+    test_input = np.empty((len(test_input), 0))
+
+    if run_config.use_target_text:
+
+        if run_config.use_bert:
+            train_input = np.concatenate(
+                [train_input,
+                 datahelper.getTargetBertFeatures(mode='train')],
+                axis=1)
+            test_input = np.concatenate(
+                [test_input,
+                 datahelper.getTargetBertFeatures(mode='test')],
+                axis=1)
+        else:
+            train_input = np.concatenate([
+                train_input,
+                np.array([
+                    datahelper.pool_text(utt)
+                    for utt in datahelper.vectorizeUtterance(mode='train')
+                ])
+            ],
+                                         axis=1)
+            test_input = np.concatenate([
+                test_input,
+                np.array([
+                    datahelper.pool_text(utt)
+                    for utt in datahelper.vectorizeUtterance(mode='test')
+                ])
+            ],
+                                        axis=1)
+
+    if run_config.use_target_video:
+        train_input = np.concatenate(
+            [train_input,
+             datahelper.getTargetVideoPool(mode='train')], axis=1)
+        test_input = np.concatenate(
+            [test_input,
+             datahelper.getTargetVideoPool(mode='test')], axis=1)
+
+    if run_config.use_target_audio:
+        train_input = np.concatenate(
+            [train_input,
+             datahelper.getTargetAudioPool(mode='train')], axis=1)
+        test_input = np.concatenate(
+            [test_input,
+             datahelper.getTargetAudioPool(mode='test')], axis=1)
+
+    if train_input.shape[1] == 0:
+        print("Invalid modalities")
+        exit(1)
+
+    # Aux input
+
+    if run_config.use_author:
+        train_input_author = datahelper.getAuthor(mode="train")
+        test_input_author = datahelper.getAuthor(mode="test")
+
+        train_input = np.concatenate([train_input, train_input_author], axis=1)
+        test_input = np.concatenate([test_input, test_input_author], axis=1)
+
+    if run_config.use_context:
+        if run_config.use_bert:
+            train_input_context = datahelper.getContextBertFeatures(
+                mode="train")
+            test_input_context = datahelper.getContextBertFeatures(mode="test")
+        else:
+            train_input_context = datahelper.getContextPool(mode="train")
+            test_input_context = datahelper.getContextPool(mode="test")
+
+        train_input = np.concatenate([train_input, train_input_context],
+                                     axis=1)
+        test_input = np.concatenate([test_input, test_input_context], axis=1)
+
+    train_output = datahelper.oneHotOutput(mode="train",
+                                           size=run_config.num_classes)
+    test_output = datahelper.oneHotOutput(mode="test",
+                                          size=run_config.num_classes)
+
+    return train_input, train_output, test_input, test_output
+
+
+def trainSpeakerIndependent(model_name=None):
+
+    run_config.fold = "SI"
+
+    (train_index, test_index) = data.getSpeakerIndependent()
+    train_input, train_output, test_input, test_output = trainIO(
+        train_index, test_index)
+
+    train_func = CLF_MAP[args.clf][0]
+    test_func = CLF_MAP[args.clf][1]
+    clf = train_func(train_input, train_output)
+    test_func(clf, test_input, test_output)
+
+
+def trainSpeakerDependent(model_name=None):
+
+    print(vars(run_config))
+
+    config_params = {
+        k: v
+        for k, v in config.Config.__dict__.items()
+        if not (k.startswith('__') and k.endswith('__'))
+    }
+    # IPython.embed()
+    # breakpoint()
+    wandb.init(config=config_params, project="multimodal-sarcasm")
+    wandb.config.update({"config_key": args.config_key})
+    wandb.run.name = run_config.run_name + re.sub(r'^.*?-', '-',
+                                                  wandb.run.name)
+    # breakpoint()
+    # wandb.config.svm_c=config.svm_c
+
+    # Load data
+    data = DataLoader(run_config)
+    # labels = ['Non-Sarcastic', 'Sarcastic']
+
+    # Iterating over each fold
+    results = []
+    for fold, (train_index,
+               test_index) in enumerate(data.getStratifiedKFold()):
+
+        # Present fold
+        run_config.fold = fold + 1
+        print("Present Fold: {}".format(run_config.fold))
+
+        train_input, train_output, test_input, test_output = trainIO(
+            train_index, test_index)
+
+        train_func = CLF_MAP[run_config.model][0]
+        # test_func = CLF_MAP[args.clf][1]
+        clf = train_func(train_input, train_output)
+
+        y_pred = clf.predict(test_input)
+        # y_probas = clf.predict_proba(test_input)
+        y_test = test_output[:, 1].astype(int)
+        # y_train = train_output[:, 1].astype(int)
+        # importances = clf.feature_importances_
+        # indices = np.argsort(importances)[::-1]
+
+        # To generate random scores
+        # y_pred = np.random.randint(2, size=len(y_pred))
+
+        # To generate majority baseline
+        # y_pred = [0]*len(y_pred)
+
+        # result_str = classification_report(y_true, y_pred, digits=3)
+        # print(confusion_matrix(y_true, y_pred))
+        # print(result_string)
+        result_dict = classification_report(y_test,
+                                            y_pred,
+                                            output_dict=True,
+                                            digits=3)
+
+        results.append(result_dict)
+        # wandb.sklearn.plot_classifier(clf,
+        #                               train_input,
+        #                               test_input,
+        #                               y_train,
+        #                               y_test,
+        #                               y_pred,
+        #                               y_probas,
+        #                               labels,
+        #                               model_name='args.clf',
+        #                               feature_names=None)
+        #
+    # Dumping result to output
+    if not os.path.exists(os.path.dirname(RESULT_FILE)):
+        os.makedirs(os.path.dirname(RESULT_FILE))
+    with open(RESULT_FILE.format(model_name), 'w') as file:
+        json.dump(results, file)
+
+
+def printResult(model_name=None):
+
+    results = json.load(open(RESULT_FILE.format(model_name), "rb"))
+
+    weighted_precision, weighted_recall = [], []
+    weighted_fscores = []
+
+    print("#" * 20)
+    for fold, result in enumerate(results):
+        weighted_fscores.append(result["weighted avg"]["f1-score"])
+        weighted_precision.append(result["weighted avg"]["precision"])
+        weighted_recall.append(result["weighted avg"]["recall"])
+
+        print("Fold {}:".format(fold + 1))
+        print(
+            "Weighted Precision: {}  Weighted Recall: {}  Weighted F score: {}"
+            .format(result["weighted avg"]["precision"],
+                    result["weighted avg"]["recall"],
+                    result["weighted avg"]["f1-score"]))
+    print("#" * 20)
+    print("Avg :")
+    precision = np.mean(weighted_precision)
+    recall = np.mean(weighted_recall)
+    fscore = np.mean(weighted_fscores)
+
+    wandb.log({
+        'weighted_precision': precision,
+        'weighted_recall': recall,
+        'weighted_fscore': fscore
+    })
+
+    print("Weighted Precision: {:.3f}  Weighted Recall: {:.3f}\
+        Weighted F score: {:.3f}".format(precision, recall, fscore))
+
+
+CLF_MAP = {
+    'lsvc': [lsvc_train, lsvc_test],
+    'lr': [lr_train, lr_test],
+    'rfc': [rfc_train, rfc_test],
+    'gauss': [gauss_train, gauss_test],
+    'svm': [svm_train, svm_test]
+}
+
+# a=CLF_MAP['lr'][0]
+
+# print(a(train_input, train_output))
+
+
+def parse_args():
+    parser = argparse.ArgumentParser()
+    parser.add_argument('--config-key',
+                        default='',
+                        choices=list(CONFIG_BY_KEY.keys()))
+    # parser.add_argument('clf', choices=list(CLF_MAP.keys()))
+    return parser.parse_args()
+
+
+args = parse_args()
+print("Args:", args)
+
+RESULT_FILE = "./output/lsvc{}.json"
+
+# Load config
+run_config = CONFIG_BY_KEY[args.config_key]
+
+# Load data
+data = DataLoader(run_config)
+
+if __name__ == "__main__":
+
+    if run_config.speaker_independent:
+        trainSpeakerIndependent(model_name=run_config.model)
+    else:
+        for _ in range(run_config.runs):
+            trainSpeakerDependent(model_name=run_config.model)
+            printResult(model_name=run_config.model)
diff --git a/wandb/run-20210428_230157-3catyuwf/files/conda-environment.yaml b/wandb/run-20210428_230157-3catyuwf/files/conda-environment.yaml
new file mode 100644
index 0000000..f78fdaf
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/files/conda-environment.yaml
@@ -0,0 +1,195 @@
+name: MUStARD
+channels:
+  - pytorch
+  - conda-forge
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _tflow_select=2.1.0=gpu
+  - absl-py=0.12.0=pyhd8ed1ab_0
+  - astor=0.8.1=pyh9f0ad1d_0
+  - astroid=2.4.0=py37_0
+  - attrs=19.3.0=py_0
+  - backcall=0.1.0=py_0
+  - blas=1.0=mkl
+  - bleach=3.1.4=pyh9f0ad1d_0
+  - bzip2=1.0.8=h7b6447c_0
+  - c-ares=1.17.1=h36c2ea0_0
+  - ca-certificates=2020.12.5=ha878542_0
+  - certifi=2020.12.5=py37h89c1867_1
+  - cffi=1.13.0=py37h2e261b9_0
+  - cudatoolkit=10.0.130=0
+  - cudnn=7.3.1=cuda10.0_0
+  - cycler=0.10.0=py37_0
+  - dbus=1.13.16=hb2f20db_0
+  - decorator=4.4.2=py_0
+  - defusedxml=0.6.0=py_0
+  - entrypoints=0.3=py37hc8dfbb8_1001
+  - expat=2.2.9=he6710b0_2
+  - ffmpeg=4.0=hcdf2ecd_0
+  - flake8=3.8.3=py_0
+  - fontconfig=2.13.0=h9420a91_0
+  - freetype=2.9.1=h8a8886c_1
+  - gast=0.4.0=pyh9f0ad1d_0
+  - glib=2.63.1=h5a9c865_0
+  - grpcio=1.33.2=py37haffed2e_2
+  - gst-plugins-base=1.14.0=hbbd80ab_1
+  - gstreamer=1.14.0=hb453b48_1
+  - h5py=2.9.0=py37h7918eee_0
+  - hdf5=1.10.4=hb1b8bf9_0
+  - icu=58.2=he6710b0_3
+  - importlib-metadata=1.6.0=py37hc8dfbb8_0
+  - importlib_metadata=1.6.0=0
+  - intel-openmp=2019.4=243
+  - ipykernel=5.2.1=py37h43977f1_0
+  - ipython=7.13.0=py37hc8dfbb8_2
+  - ipython_genutils=0.2.0=py_1
+  - isort=4.3.21=py37_0
+  - jedi=0.17.0=py37hc8dfbb8_0
+  - jinja2=2.11.2=pyh9f0ad1d_0
+  - joblib=0.13.2=py37_0
+  - jpeg=9b=h024ee3a_2
+  - jsonschema=3.2.0=py37hc8dfbb8_1
+  - jupyter_client=6.1.3=py_0
+  - jupyter_contrib_core=0.3.3=py_2
+  - jupyter_contrib_nbextensions=0.5.1=py37_0
+  - jupyter_core=4.6.3=py37hc8dfbb8_1
+  - jupyter_highlight_selected_word=0.2.0=py37_1000
+  - jupyter_latex_envs=1.4.6=py37_1000
+  - jupyter_nbextensions_configurator=0.4.1=py37_0
+  - keras-applications=1.0.8=py_1
+  - keras-preprocessing=1.1.2=pyhd8ed1ab_0
+  - kiwisolver=1.2.0=py37hfd86e86_0
+  - krb5=1.17.1=h173b8e3_0
+  - lazy-object-proxy=1.4.3=py37h7b6447c_0
+  - libcurl=7.71.1=hcdd3856_3
+  - libedit=3.1.20181209=hc058e9b_0
+  - libffi=3.2.1=hd88cf55_4
+  - libgcc-ng=9.1.0=hdf63c60_0
+  - libgfortran-ng=7.3.0=hdf63c60_0
+  - libiconv=1.15=h516909a_1006
+  - libopus=1.3=h7b6447c_0
+  - libpng=1.6.37=hbc83047_0
+  - libprotobuf=3.8.0=h8b12597_0
+  - libsodium=1.0.17=h516909a_0
+  - libssh2=1.9.0=hab1572f_5
+  - libstdcxx-ng=9.1.0=hdf63c60_0
+  - libtiff=4.0.10=h2733197_2
+  - libuuid=1.0.3=h1bed415_2
+  - libvpx=1.7.0=h439df22_0
+  - libxcb=1.14=h7b6447c_0
+  - libxml2=2.9.10=he19cac6_1
+  - libxslt=1.1.34=hc22bd24_0
+  - markdown=3.3.4=pyhd8ed1ab_0
+  - markupsafe=1.1.1=py37h8f50634_1
+  - matplotlib=3.2.1=0
+  - matplotlib-base=3.2.1=py37hef1b27d_0
+  - mccabe=0.6.1=py37_1
+  - mistune=0.8.4=py37h8f50634_1001
+  - mkl=2019.4=243
+  - mkl-service=2.3.0=py37he904b0f_0
+  - mkl_fft=1.0.14=py37ha843d7b_0
+  - mkl_random=1.1.0=py37hd6b4f25_0
+  - mock=4.0.3=py37h89c1867_1
+  - nbconvert=5.6.1=py37hc8dfbb8_1
+  - nbformat=5.0.6=py_0
+  - ncurses=6.1=he6710b0_1
+  - ninja=1.9.0=py37hfd86e86_0
+  - nltk=3.4.1=py37_0
+  - notebook=6.0.3=py37_0
+  - numpy=1.15.4=py37h7e9f1db_0
+  - numpy-base=1.15.4=py37hde5b4d6_0
+  - olefile=0.46=py37_0
+  - openssl=1.1.1h=h516909a_0
+  - pandas=1.0.3=py37h0573a6f_0
+  - pandoc=2.9.2.1=0
+  - pandocfilters=1.4.2=py_1
+  - parso=0.7.0=pyh9f0ad1d_0
+  - pcre=8.44=he6710b0_0
+  - pexpect=4.8.0=py37hc8dfbb8_1
+  - pickleshare=0.7.5=py37hc8dfbb8_1001
+  - pillow=5.4.1=py37h34e0f95_0
+  - pip=19.0.3=py37_0
+  - prometheus_client=0.7.1=py_0
+  - prompt-toolkit=3.0.5=py_0
+  - ptyprocess=0.6.0=py_1001
+  - pycodestyle=2.6.0=py_0
+  - pycparser=2.19=py37_0
+  - pyflakes=2.2.0=py_0
+  - pygments=2.6.1=py_0
+  - pylint=2.5.0=py37_1
+  - pyparsing=2.4.7=py_0
+  - pyqt=5.9.2=py37h05f1152_2
+  - pyrsistent=0.16.0=py37h8f50634_0
+  - python=3.7.2=h0371630_0
+  - python-dateutil=2.8.1=py_0
+  - python_abi=3.7=1_cp37m
+  - pytorch=1.0.1=py3.7_cuda10.0.130_cudnn7.4.2_2
+  - pytz=2019.3=py_0
+  - pyzmq=19.0.0=py37hac76be4_1
+  - qt=5.9.7=h5867ecd_1
+  - readline=7.0=h7b6447c_5
+  - rope=0.17.0=py_0
+  - scikit-learn=0.21.1=py37hd81dba3_0
+  - scipy=1.3.1=py37h7c811a0_0
+  - send2trash=1.5.0=py_0
+  - setuptools=41.4.0=py37_0
+  - sip=4.19.8=py37hf484d3e_0
+  - sqlite=3.30.1=h7b6447c_0
+  - tensorboard=1.13.1=py37_0
+  - tensorflow=1.13.1=h5ece82f_5
+  - tensorflow-base=1.13.1=py37h5ece82f_5
+  - tensorflow-estimator=1.13.0=py_0
+  - tensorflow-gpu=1.13.1=h0d30ee6_0
+  - termcolor=1.1.0=py_2
+  - terminado=0.8.3=py37hc8dfbb8_1
+  - testpath=0.4.4=py_0
+  - tk=8.6.8=hbc83047_0
+  - toml=0.10.0=py37h28b3542_0
+  - torchvision=0.2.2=py_3
+  - tornado=6.0.4=py37h8f50634_1
+  - tqdm=4.31.1=py37_1
+  - traitlets=4.3.3=py37hc8dfbb8_1
+  - typed-ast=1.4.1=py37h7b6447c_0
+  - wcwidth=0.1.9=pyh9f0ad1d_0
+  - webencodings=0.5.1=py_1
+  - werkzeug=1.0.1=pyh9f0ad1d_0
+  - wheel=0.33.6=py37_0
+  - wrapt=1.11.2=py37h7b6447c_0
+  - xz=5.2.5=h7b6447c_0
+  - yaml=0.2.4=h516909a_0
+  - yapf=0.30.0=py_0
+  - zeromq=4.3.2=he1b5a44_2
+  - zipp=3.1.0=py_0
+  - zlib=1.2.11=h7b6447c_3
+  - zstd=1.3.7=h0b5b093_0
+  - pip:
+    - chardet==4.0.0
+    - click==7.1.2
+    - configparser==5.0.2
+    - docker-pycreds==0.4.0
+    - gitdb==4.0.7
+    - gitpython==3.1.15
+    - idna==2.10
+    - jsonlines==1.2.0
+    - jupyter-contrib-core==0.3.3
+    - jupyter-contrib-nbextensions==0.5.1
+    - jupyter-highlight-selected-word==0.2.0
+    - jupyter-nbextensions-configurator==0.4.1
+    - lxml==4.5.0
+    - overrides==1.9
+    - pathtools==0.1.2
+    - promise==2.3
+    - protobuf==3.15.8
+    - psutil==5.8.0
+    - pyyaml==5.3.1
+    - requests==2.25.1
+    - sentry-sdk==1.0.0
+    - shortuuid==1.0.1
+    - six==1.15.0
+    - smmap==4.0.0
+    - subprocess32==3.5.4
+    - typing-extensions==3.7.4.3
+    - urllib3==1.26.4
+    - wandb==0.10.27
+prefix: /home/miguel/anaconda3/envs/MUStARD
diff --git a/wandb/run-20210428_230157-3catyuwf/files/config.yaml b/wandb/run-20210428_230157-3catyuwf/files/config.yaml
new file mode 100644
index 0000000..8aa795c
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/files/config.yaml
@@ -0,0 +1,95 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.10.27
+    code_path: code/train.py
+    framework: sklearn
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.2
+    t:
+      1:
+      - 5
+      2:
+      - 5
+      4: 3.7.2
+      5: 0.10.27
+      8:
+      - 5
+batch_size:
+  desc: null
+  value: 16
+config_key:
+  desc: null
+  value: tav
+embedding_dim:
+  desc: null
+  value: 300
+epochs:
+  desc: null
+  value: 15
+lsvc_c:
+  desc: null
+  value: 20
+lsvc_max_iter:
+  desc: null
+  value: 10000
+max_context_length:
+  desc: null
+  value: 4
+max_sent_length:
+  desc: null
+  value: 20
+model:
+  desc: null
+  value: lsvc
+num_classes:
+  desc: null
+  value: 2
+run_name:
+  desc: null
+  value: lsvc
+runs:
+  desc: null
+  value: 1
+speaker_independent:
+  desc: null
+  value: false
+svm_c:
+  desc: null
+  value: 10.0
+svm_gamma:
+  desc: null
+  value: scale
+svm_kernel:
+  desc: null
+  value: rbf
+svm_scale:
+  desc: null
+  value: true
+use_author:
+  desc: null
+  value: false
+use_bert:
+  desc: null
+  value: true
+use_context:
+  desc: null
+  value: false
+use_target_audio:
+  desc: null
+  value: false
+use_target_text:
+  desc: null
+  value: false
+use_target_video:
+  desc: null
+  value: false
+val_split:
+  desc: null
+  value: 0.1
+word_embedding_path:
+  desc: null
+  value: /home/sacastro/glove.840B.300d.txt
diff --git a/wandb/run-20210428_230157-3catyuwf/files/diff.patch b/wandb/run-20210428_230157-3catyuwf/files/diff.patch
new file mode 100644
index 0000000..6cf2420
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/files/diff.patch
@@ -0,0 +1,27 @@
+diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
+index d68616c..1b8f3a6 120000
+--- a/wandb/debug-internal.log
++++ b/wandb/debug-internal.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug-internal.log
+\ No newline at end of file
++run-20210428_230157-3catyuwf/logs/debug-internal.log
+\ No newline at end of file
+diff --git a/wandb/debug.log b/wandb/debug.log
+index d8b0872..fb68fb7 120000
+--- a/wandb/debug.log
++++ b/wandb/debug.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug.log
+\ No newline at end of file
++run-20210428_230157-3catyuwf/logs/debug.log
+\ No newline at end of file
+diff --git a/wandb/latest-run b/wandb/latest-run
+index efe89a9..f7ab1af 120000
+--- a/wandb/latest-run
++++ b/wandb/latest-run
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j
+\ No newline at end of file
++run-20210428_230157-3catyuwf
+\ No newline at end of file
diff --git a/wandb/run-20210428_230157-3catyuwf/files/output.log b/wandb/run-20210428_230157-3catyuwf/files/output.log
new file mode 100644
index 0000000..211bdd5
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/files/output.log
@@ -0,0 +1 @@
+Weighted Precision: 0.745  Weighted Recall: 0.649        Weighted F score: 0.593
\ No newline at end of file
diff --git a/wandb/run-20210428_230157-3catyuwf/files/requirements.txt b/wandb/run-20210428_230157-3catyuwf/files/requirements.txt
new file mode 100644
index 0000000..20f3b2f
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/files/requirements.txt
@@ -0,0 +1,125 @@
+absl-py==0.12.0
+astor==0.8.1
+astroid==2.4.0
+attrs==19.3.0
+backcall==0.1.0
+bleach==3.1.4
+certifi==2020.12.5
+cffi==1.13.0
+chardet==4.0.0
+click==7.1.2
+colorama==0.4.3
+configparser==5.0.2
+cycler==0.10.0
+decorator==4.4.2
+defusedxml==0.6.0
+docker-pycreds==0.4.0
+entrypoints==0.3
+flake8==3.8.3
+gast==0.4.0
+gitdb==4.0.7
+gitpython==3.1.15
+grpcio==1.33.2
+h5py==2.9.0
+idna==2.10
+importlib-metadata==1.6.0
+ipykernel==5.2.1
+ipython-genutils==0.2.0
+ipython==7.13.0
+isort==4.3.21
+jedi==0.17.0
+jinja2==2.11.2
+joblib==0.13.2
+jsonlines==1.2.0
+jsonschema==3.2.0
+jupyter-client==6.1.3
+jupyter-contrib-core==0.3.3
+jupyter-contrib-nbextensions==0.5.1
+jupyter-core==4.6.3
+jupyter-highlight-selected-word==0.2.0
+jupyter-latex-envs==1.4.6
+jupyter-nbextensions-configurator==0.4.1
+keras-applications==1.0.8
+keras-preprocessing==1.1.2
+kiwisolver==1.2.0
+lazy-object-proxy==1.4.3
+lxml==4.5.0
+lyricwikia==0.1.11
+markdown==3.3.4
+markupsafe==1.1.1
+matplotlib==3.2.1
+mccabe==0.6.1
+mistune==0.8.4
+mkl-fft==1.0.14
+mkl-random==1.1.0
+mkl-service==2.3.0
+mock==4.0.3
+nbconvert==5.6.1
+nbformat==5.0.6
+nltk==3.4.1
+notebook==6.0.3
+numpy==1.15.4
+olefile==0.46
+overrides==1.9
+pandas==1.0.3
+pandocfilters==1.4.2
+parso==0.7.0
+pathtools==0.1.2
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==5.4.1
+pip==19.0.3
+prometheus-client==0.7.1
+promise==2.3
+prompt-toolkit==3.0.5
+protobuf==3.15.8
+psutil==5.8.0
+ptyprocess==0.6.0
+pycodestyle==2.6.0
+pycparser==2.19
+pyflakes==2.2.0
+pygments==2.6.1
+pylint==2.5.0
+pynvim==0.4.1
+pyparsing==2.4.7
+pyrsistent==0.16.0
+python-dateutil==2.8.1
+pytz==2019.3
+pyyaml==5.3.1
+pyzmq==19.0.0
+requests==2.25.1
+rope==0.17.0
+scikit-learn==0.21.1
+scipy==1.3.1
+send2trash==1.5.0
+sentry-sdk==1.0.0
+setuptools==41.4.0
+shortuuid==1.0.1
+six==1.15.0
+smmap==4.0.0
+spotify-cli-linux==1.6.0
+subprocess32==3.5.4
+tensorboard==1.13.1
+tensorflow-estimator==1.13.0
+tensorflow==1.13.1
+termcolor==1.1.0
+terminado==0.8.3
+testpath==0.4.4
+tldr==0.5
+toml==0.10.0
+torch==1.0.1.post2
+torchvision==0.2.2
+tornado==6.0.4
+tqdm==4.31.1
+traitlets==4.3.3
+typed-ast==1.4.1
+typing-extensions==3.7.4.3
+urllib3==1.26.4
+wandb==0.10.27
+wcwidth==0.1.9
+webencodings==0.5.1
+werkzeug==1.0.1
+wheel==0.33.6
+wrapt==1.11.2
+yapf==0.30.0
+zipp==3.1.0
\ No newline at end of file
diff --git a/wandb/run-20210428_230157-3catyuwf/files/wandb-metadata.json b/wandb/run-20210428_230157-3catyuwf/files/wandb-metadata.json
new file mode 100644
index 0000000..d6d4abc
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/files/wandb-metadata.json
@@ -0,0 +1,27 @@
+{
+    "os": "Linux-5.4.0-72-generic-x86_64-with-debian-bullseye-sid",
+    "python": "3.7.2",
+    "heartbeatAt": "2021-04-28T21:02:02.304575",
+    "startedAt": "2021-04-28T21:01:57.457466",
+    "docker": null,
+    "gpu": "GeForce 940MX",
+    "gpu_count": 1,
+    "cpu_count": 4,
+    "cuda": null,
+    "args": [
+        "--config-key",
+        "tav"
+    ],
+    "state": "running",
+    "program": "train.py",
+    "codePath": "train.py",
+    "git": {
+        "remote": "git@github.com:MiguelPax/MUStARD.git",
+        "commit": "96fbc572f36a36bb78eede03ab8b438294eb97b9"
+    },
+    "email": "miguelma@kth.se",
+    "root": "/home/miguel/Desktop/NLP/MUStARD",
+    "host": "guthrie",
+    "username": "miguel",
+    "executable": "/home/miguel/anaconda3/envs/MUStARD/bin/python3"
+}
diff --git a/wandb/run-20210428_230157-3catyuwf/files/wandb-summary.json b/wandb/run-20210428_230157-3catyuwf/files/wandb-summary.json
new file mode 100644
index 0000000..3a2678b
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/files/wandb-summary.json
@@ -0,0 +1 @@
+{"weighted_precision": 0.7450260082951249, "weighted_recall": 0.6492753623188406, "weighted_fscore": 0.5930034499811978, "_runtime": 454, "_timestamp": 1619644171, "_step": 0}
\ No newline at end of file
diff --git a/wandb/run-20210428_230157-3catyuwf/logs/debug-internal.log b/wandb/run-20210428_230157-3catyuwf/logs/debug-internal.log
new file mode 100644
index 0000000..2e2d96e
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/logs/debug-internal.log
@@ -0,0 +1,232 @@
+2021-04-28 23:01:59,646 INFO    MainThread:2600949 [internal.py:wandb_internal():91] W&B internal server running at pid: 2600949, started at: 2021-04-28 23:01:59.645602
+2021-04-28 23:01:59,648 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: check_version
+2021-04-28 23:01:59,648 INFO    WriterThread:2600949 [datastore.py:open_for_write():77] open: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210428_230157-3catyuwf/run-3catyuwf.wandb
+2021-04-28 23:01:59,650 DEBUG   SenderThread:2600949 [sender.py:send():160] send: header
+2021-04-28 23:01:59,650 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:01:59,650 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: check_version
+2021-04-28 23:01:59,757 DEBUG   SenderThread:2600949 [sender.py:send():160] send: run
+2021-04-28 23:02:00,279 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: run_start
+2021-04-28 23:02:00,297 INFO    SenderThread:2600949 [sender.py:_start_run_threads():654] run started: 3catyuwf with start time 1619643717
+2021-04-28 23:02:00,297 DEBUG   SenderThread:2600949 [sender.py:send():160] send: summary
+2021-04-28 23:02:00,298 INFO    SenderThread:2600949 [sender.py:_save_file():781] saving file wandb-summary.json with policy end
+2021-04-28 23:02:02,303 DEBUG   HandlerThread:2600949 [meta.py:__init__():39] meta init
+2021-04-28 23:02:02,304 DEBUG   HandlerThread:2600949 [meta.py:__init__():53] meta init done
+2021-04-28 23:02:02,304 DEBUG   HandlerThread:2600949 [meta.py:probe():210] probe
+2021-04-28 23:02:02,315 DEBUG   HandlerThread:2600949 [meta.py:_setup_git():200] setup git
+2021-04-28 23:02:02,356 DEBUG   HandlerThread:2600949 [meta.py:_setup_git():207] setup git done
+2021-04-28 23:02:02,356 DEBUG   HandlerThread:2600949 [meta.py:_save_code():89] save code
+2021-04-28 23:02:02,367 DEBUG   HandlerThread:2600949 [meta.py:_save_code():110] save code done
+2021-04-28 23:02:02,367 DEBUG   HandlerThread:2600949 [meta.py:_save_patches():127] save patches
+2021-04-28 23:02:02,483 DEBUG   HandlerThread:2600949 [meta.py:_save_patches():169] save patches done
+2021-04-28 23:02:02,483 DEBUG   HandlerThread:2600949 [meta.py:_save_pip():57] save pip
+2021-04-28 23:02:02,483 DEBUG   HandlerThread:2600949 [meta.py:_save_pip():71] save pip done
+2021-04-28 23:02:02,484 DEBUG   HandlerThread:2600949 [meta.py:_save_conda():78] save conda
+2021-04-28 23:02:14,703 DEBUG   HandlerThread:2600949 [meta.py:_save_conda():86] save conda done
+2021-04-28 23:02:14,704 DEBUG   HandlerThread:2600949 [meta.py:probe():252] probe done
+2021-04-28 23:02:14,781 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:02:14,782 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:02:14,782 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:02:15,029 DEBUG   SenderThread:2600949 [sender.py:send():160] send: config
+2021-04-28 23:02:15,328 DEBUG   SenderThread:2600949 [sender.py:send():160] send: run
+2021-04-28 23:02:15,653 INFO    SenderThread:2600949 [sender.py:send_run():555] updated run: 3catyuwf
+2021-04-28 23:02:15,653 DEBUG   SenderThread:2600949 [sender.py:send():160] send: files
+2021-04-28 23:02:15,653 INFO    SenderThread:2600949 [sender.py:_save_file():781] saving file wandb-metadata.json with policy now
+2021-04-28 23:02:15,654 INFO    SenderThread:2600949 [sender.py:_save_file():781] saving file code/train.py with policy now
+2021-04-28 23:02:15,655 INFO    SenderThread:2600949 [sender.py:_save_file():781] saving file diff.patch with policy now
+2021-04-28 23:02:30,958 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:02:30,960 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:02:30,960 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:02:31,612 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:02:47,254 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:02:47,256 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:02:47,257 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:03:02,880 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:03:03,104 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:03:03,109 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:03:03,109 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:03:20,157 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:03:20,179 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:03:20,179 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:03:34,219 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:03:36,291 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:03:36,292 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:03:36,292 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:03:52,678 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:03:52,799 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:03:52,800 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:04:05,504 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:04:08,673 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:04:08,673 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:04:08,673 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:04:23,882 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:04:23,883 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:04:23,883 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:04:36,085 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:04:39,564 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:04:39,565 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:04:39,565 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:04:55,272 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:04:55,274 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:04:55,274 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:05:06,423 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:05:10,584 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:05:10,584 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:05:10,584 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:05:25,843 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:05:25,843 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:05:25,843 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:05:36,781 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:05:41,099 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:05:41,099 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:05:41,099 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:05:56,318 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:05:56,319 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:05:56,319 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:06:07,119 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:06:11,530 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:06:11,530 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:06:11,530 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:06:26,976 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:06:26,976 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:06:26,977 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:06:37,614 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:06:42,188 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:06:42,188 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:06:42,188 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:06:57,480 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:06:57,480 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:06:57,480 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:07:08,122 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:07:12,751 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:07:12,752 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:07:12,752 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:07:28,007 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:07:28,008 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:07:28,008 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:07:38,609 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:07:43,368 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:07:43,369 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:07:43,369 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:07:58,624 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:07:58,624 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:07:58,624 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:08:08,978 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:08:13,860 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:08:13,860 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:08:13,860 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:08:29,142 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:08:29,143 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:08:29,143 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:08:39,294 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:08:44,400 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:08:44,400 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:08:44,400 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:08:59,626 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:08:59,626 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:08:59,626 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:09:09,707 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:09:14,914 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:09:14,925 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:14,925 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:09:30,220 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: status
+2021-04-28 23:09:30,221 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:30,221 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: status
+2021-04-28 23:09:31,049 DEBUG   SenderThread:2600949 [sender.py:send():160] send: history
+2021-04-28 23:09:31,052 DEBUG   SenderThread:2600949 [sender.py:send():160] send: summary
+2021-04-28 23:09:31,055 INFO    SenderThread:2600949 [sender.py:_save_file():781] saving file wandb-summary.json with policy end
+2021-04-28 23:09:33,101 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:33,101 DEBUG   SenderThread:2600949 [sender.py:send():160] send: telemetry
+2021-04-28 23:09:33,378 DEBUG   SenderThread:2600949 [sender.py:send():160] send: exit
+2021-04-28 23:09:33,381 INFO    SenderThread:2600949 [sender.py:send_exit():238] handling exit code: 0
+2021-04-28 23:09:33,398 INFO    SenderThread:2600949 [sender.py:send_exit():246] send defer
+2021-04-28 23:09:33,400 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:33,400 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:33,404 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:33,405 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 0
+2021-04-28 23:09:33,406 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:33,406 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:33,406 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 0
+2021-04-28 23:09:33,406 INFO    SenderThread:2600949 [sender.py:send_request_defer():291] send defer: 1
+2021-04-28 23:09:33,407 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:33,407 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 1
+2021-04-28 23:09:33,510 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:33,510 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:33,510 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:33,510 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 1
+2021-04-28 23:09:33,510 INFO    SenderThread:2600949 [sender.py:send_request_defer():291] send defer: 2
+2021-04-28 23:09:33,511 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:33,511 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:33,511 DEBUG   SenderThread:2600949 [sender.py:send():160] send: stats
+2021-04-28 23:09:33,512 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:33,512 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 2
+2021-04-28 23:09:33,513 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:33,513 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:33,513 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 2
+2021-04-28 23:09:33,514 INFO    SenderThread:2600949 [sender.py:send_request_defer():291] send defer: 3
+2021-04-28 23:09:33,514 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:33,514 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 3
+2021-04-28 23:09:33,515 DEBUG   SenderThread:2600949 [sender.py:send():160] send: summary
+2021-04-28 23:09:33,515 INFO    SenderThread:2600949 [sender.py:_save_file():781] saving file wandb-summary.json with policy end
+2021-04-28 23:09:33,515 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:33,515 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:33,515 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 3
+2021-04-28 23:09:33,515 INFO    SenderThread:2600949 [sender.py:send_request_defer():291] send defer: 4
+2021-04-28 23:09:33,516 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:33,518 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 4
+2021-04-28 23:09:33,518 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:33,518 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:33,518 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 4
+2021-04-28 23:09:33,612 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:34,503 INFO    SenderThread:2600949 [sender.py:send_request_defer():291] send defer: 5
+2021-04-28 23:09:34,528 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:34,528 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:34,549 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:34,549 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 5
+2021-04-28 23:09:34,550 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:34,550 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:34,550 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 5
+2021-04-28 23:09:34,550 INFO    SenderThread:2600949 [sender.py:send_request_defer():291] send defer: 6
+2021-04-28 23:09:34,551 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:34,551 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 6
+2021-04-28 23:09:34,551 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:34,551 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:34,551 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 6
+2021-04-28 23:09:34,630 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:35,030 INFO    SenderThread:2600949 [sender.py:send_request_defer():291] send defer: 7
+2021-04-28 23:09:35,030 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:35,030 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:35,031 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:35,031 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 7
+2021-04-28 23:09:35,031 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:35,031 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:35,031 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 7
+2021-04-28 23:09:35,033 INFO    SenderThread:2600949 [sender.py:send_request_defer():291] send defer: 8
+2021-04-28 23:09:35,033 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: defer
+2021-04-28 23:09:35,034 DEBUG   SenderThread:2600949 [sender.py:send():160] send: final
+2021-04-28 23:09:35,034 INFO    HandlerThread:2600949 [handler.py:handle_request_defer():134] handle defer: 8
+2021-04-28 23:09:35,034 DEBUG   SenderThread:2600949 [sender.py:send():160] send: footer
+2021-04-28 23:09:35,034 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:35,034 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: defer
+2021-04-28 23:09:35,034 INFO    SenderThread:2600949 [sender.py:send_request_defer():255] handle sender defer: 8
+2021-04-28 23:09:35,133 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:35,133 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:35,134 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:35,237 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:35,237 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:35,237 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:35,340 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:35,341 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:35,342 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:35,475 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:35,476 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:35,476 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:35,579 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: poll_exit
+2021-04-28 23:09:35,580 DEBUG   SenderThread:2600949 [sender.py:send():160] send: request
+2021-04-28 23:09:35,580 DEBUG   SenderThread:2600949 [sender.py:send_request():169] send_request: poll_exit
+2021-04-28 23:09:35,584 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: get_summary
+2021-04-28 23:09:35,588 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: sampled_history
+2021-04-28 23:09:35,594 DEBUG   HandlerThread:2600949 [handler.py:handle_request():120] handle_request: shutdown
+2021-04-28 23:09:35,595 INFO    HandlerThread:2600949 [handler.py:finish():624] shutting down handler
+2021-04-28 23:09:36,034 INFO    WriterThread:2600949 [datastore.py:close():258] close: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210428_230157-3catyuwf/run-3catyuwf.wandb
+2021-04-28 23:09:36,581 INFO    SenderThread:2600949 [sender.py:finish():884] shutting down sender
+2021-04-28 23:09:36,595 INFO    MainThread:2600949 [internal.py:handle_exit():78] Internal process exited
diff --git a/wandb/run-20210428_230157-3catyuwf/logs/debug.log b/wandb/run-20210428_230157-3catyuwf/logs/debug.log
new file mode 100644
index 0000000..6846ab5
--- /dev/null
+++ b/wandb/run-20210428_230157-3catyuwf/logs/debug.log
@@ -0,0 +1,113 @@
+2021-04-28 23:01:57,461 INFO    MainThread:2600253 [wandb_setup.py:_flush():69] setting env: {}
+2021-04-28 23:01:57,461 INFO    MainThread:2600253 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-04-28 23:01:57,462 INFO    MainThread:2600253 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-04-28 23:01:57,462 INFO    MainThread:2600253 [wandb_init.py:_log_setup():336] Logging user logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210428_230157-3catyuwf/logs/debug.log
+2021-04-28 23:01:57,462 INFO    MainThread:2600253 [wandb_init.py:_log_setup():337] Logging internal logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210428_230157-3catyuwf/logs/debug-internal.log
+2021-04-28 23:01:57,462 INFO    MainThread:2600253 [wandb_init.py:init():369] calling init triggers
+2021-04-28 23:01:57,462 INFO    MainThread:2600253 [wandb_init.py:init():376] wandb.init called with sweep_config: {}
+config: {'runs': 1, 'use_context': False, 'use_author': False, 'use_bert': True, 'use_target_text': False, 'use_target_audio': False, 'use_target_video': False, 'speaker_independent': False, 'embedding_dim': 300, 'word_embedding_path': '/home/sacastro/glove.840B.300d.txt', 'max_sent_length': 20, 'max_context_length': 4, 'num_classes': 2, 'epochs': 15, 'batch_size': 16, 'val_split': 0.1, 'model': 'lsvc', 'run_name': 'lsvc', 'svm_c': 10.0, 'svm_scale': True, 'svm_gamma': 'scale', 'svm_kernel': 'rbf', 'lsvc_c': 20, 'lsvc_max_iter': 10000}
+2021-04-28 23:01:57,462 INFO    MainThread:2600253 [wandb_init.py:init():418] starting backend
+2021-04-28 23:01:57,462 INFO    MainThread:2600253 [backend.py:_multiprocessing_setup():71] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2021-04-28 23:01:57,466 INFO    MainThread:2600253 [backend.py:ensure_launched():123] starting backend process...
+2021-04-28 23:01:57,523 INFO    MainThread:2600253 [backend.py:ensure_launched():128] started backend process with pid: 2600949
+2021-04-28 23:01:57,528 INFO    MainThread:2600253 [wandb_init.py:init():423] backend started and connected
+2021-04-28 23:01:57,533 INFO    MainThread:2600253 [wandb_init.py:init():465] updated telemetry
+2021-04-28 23:01:57,539 INFO    MainThread:2600253 [wandb_init.py:init():484] communicating current version
+2021-04-28 23:01:59,756 INFO    MainThread:2600253 [wandb_init.py:init():489] got version response 
+2021-04-28 23:01:59,756 INFO    MainThread:2600253 [wandb_init.py:init():497] communicating run to backend with 30 second timeout
+2021-04-28 23:02:00,277 INFO    MainThread:2600253 [wandb_init.py:init():522] starting run threads in backend
+2021-04-28 23:02:05,562 INFO    MainThread:2600253 [wandb_run.py:_console_start():1524] atexit reg
+2021-04-28 23:02:05,630 INFO    MainThread:2600253 [wandb_run.py:_redirect():1371] redirect: SettingsConsole.REDIRECT
+2021-04-28 23:02:05,631 INFO    MainThread:2600253 [wandb_run.py:_redirect():1376] Redirecting console.
+2021-04-28 23:02:06,110 INFO    MainThread:2600253 [wandb_run.py:_redirect():1438] Redirects installed.
+2021-04-28 23:02:06,110 INFO    MainThread:2600253 [wandb_init.py:init():546] run started, returning control to user process
+2021-04-28 23:02:06,111 INFO    MainThread:2600253 [wandb_run.py:_config_callback():749] config_cb None None {'config_key': 'tav'}
+2021-04-28 23:09:31,050 INFO    MainThread:2600253 [wandb_run.py:_atexit_cleanup():1494] got exitcode: 0
+2021-04-28 23:09:31,075 INFO    MainThread:2600253 [wandb_run.py:_restore():1466] restore
+2021-04-28 23:09:33,405 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: file_counts {
+  wandb_count: 2
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 15127
+  total_bytes: 15127
+}
+
+2021-04-28 23:09:33,512 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: file_counts {
+  wandb_count: 2
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 15127
+  total_bytes: 15127
+}
+
+2021-04-28 23:09:34,528 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 15127
+  total_bytes: 24516
+}
+
+2021-04-28 23:09:35,032 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 24516
+  total_bytes: 24516
+}
+
+2021-04-28 23:09:35,135 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 24516
+  total_bytes: 24516
+}
+
+2021-04-28 23:09:35,239 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 24516
+  total_bytes: 24516
+}
+
+2021-04-28 23:09:35,373 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 24516
+  total_bytes: 24516
+}
+
+2021-04-28 23:09:35,477 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 24516
+  total_bytes: 24516
+}
+
+2021-04-28 23:09:35,582 INFO    MainThread:2600253 [wandb_run.py:_wait_for_finish():1616] got exit ret: done: true
+exit_result {
+}
+file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 24516
+  total_bytes: 24516
+}
+
+2021-04-28 23:09:39,214 INFO    MainThread:2600253 [wandb_run.py:_show_summary():1771] rendering summary
+2021-04-28 23:09:39,215 INFO    MainThread:2600253 [wandb_run.py:_show_history():1809] rendering history
+2021-04-28 23:09:39,216 INFO    MainThread:2600253 [wandb_run.py:_show_files():1838] logging synced files
diff --git a/wandb/run-20210428_230157-3catyuwf/run-3catyuwf.wandb b/wandb/run-20210428_230157-3catyuwf/run-3catyuwf.wandb
new file mode 100644
index 0000000..6275bac
Binary files /dev/null and b/wandb/run-20210428_230157-3catyuwf/run-3catyuwf.wandb differ
diff --git a/wandb/run-20210429_143837-3jlupzzq/files/conda-environment.yaml b/wandb/run-20210429_143837-3jlupzzq/files/conda-environment.yaml
new file mode 100644
index 0000000..7c96cd5
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/files/conda-environment.yaml
@@ -0,0 +1,4 @@
+name: mustard
+channels:
+  - defaults
+prefix: /home/miguel/miniconda3/envs/mustard/envs/mustard
diff --git a/wandb/run-20210429_143837-3jlupzzq/files/config.yaml b/wandb/run-20210429_143837-3jlupzzq/files/config.yaml
new file mode 100644
index 0000000..54730b0
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/files/config.yaml
@@ -0,0 +1,14 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.10.28
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.2
+    t:
+      4: 3.7.2
+      5: 0.10.28
+      8:
+      - 5
diff --git a/wandb/run-20210429_143837-3jlupzzq/files/diff.patch b/wandb/run-20210429_143837-3jlupzzq/files/diff.patch
new file mode 100644
index 0000000..a673723
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/files/diff.patch
@@ -0,0 +1,98 @@
+diff --git a/train.py b/train.py
+index 122991c..e9d1d64 100644
+--- a/train.py
++++ b/train.py
+@@ -3,7 +3,9 @@ import json
+ import os
+ import re
+ 
+-import IPython
++from scipy.sparse.construct import random
++
++# import IPython
+ import numpy as np
+ from sklearn import svm
+ from sklearn.ensemble import RandomForestClassifier
+@@ -13,6 +15,10 @@ from sklearn.naive_bayes import GaussianNB
+ from sklearn.pipeline import make_pipeline
+ from sklearn.preprocessing import FunctionTransformer, StandardScaler
+ from sklearn.svm import LinearSVC
++import fastai.vision
++import torch
++import torch.nn.functional as F
++from torch import nn
+ import wandb
+ 
+ import config
+@@ -23,6 +29,34 @@ from data_loader import DataHelper
+ # %%wandb
+ wandb.login()
+ WANDB_NOTEBOOK_NAME = 'train.py'
++breakpoint()
++
++class FullyConnectedNN(nn.Module):
++    def __init__(self):
++        # call constructor from superclass
++        super().__init__()
++
++        # define network layers
++        self.fc1 = nn.Linear(1503, 250, bias=True)
++        self.fc2 = nn.Linear(250, 120, bias=True)
++        self.fc3 = nn.Linear(120, 2, bias=True)
++
++    def forward(self, xb):
++        # define forward pass
++        x = xb.float()
++        # x = xb.view(250, -1)
++        x = F.relu(self.fc1(x))
++        x = F.relu(self.fc2(x))
++        x = torch.sigmoid(self.fc3(x))
++        # self.lin3(x)
++        return x
++
++
++def fcnn_train(train_input, train_output):
++    clf = FullyConnectedNN()
++    print(clf)
++    # fcnn_learner = Learner(data=data, model=clf, loss_func=nn.CrossEntropyLoss(),metrics=accuracy)
++    # fcnn_learner.fit_one_cycle(5,1e-2)
+ 
+ 
+ def lsvc_train(train_input, train_output):
+@@ -377,7 +411,8 @@ CLF_MAP = {
+     'lr': [lr_train, lr_test],
+     'rfc': [rfc_train, rfc_test],
+     'gauss': [gauss_train, gauss_test],
+-    'svm': [svm_train, svm_test]
++    'svm': [svm_train, svm_test],
++    'fcnn': [fcnn_train, None]
+ }
+ 
+ # a=CLF_MAP['lr'][0]
+diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
+index d68616c..32524e6 120000
+--- a/wandb/debug-internal.log
++++ b/wandb/debug-internal.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug-internal.log
+\ No newline at end of file
++run-20210429_143837-3jlupzzq/logs/debug-internal.log
+\ No newline at end of file
+diff --git a/wandb/debug.log b/wandb/debug.log
+index d8b0872..a9aaa9a 120000
+--- a/wandb/debug.log
++++ b/wandb/debug.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug.log
+\ No newline at end of file
++run-20210429_143837-3jlupzzq/logs/debug.log
+\ No newline at end of file
+diff --git a/wandb/latest-run b/wandb/latest-run
+index efe89a9..22caf50 120000
+--- a/wandb/latest-run
++++ b/wandb/latest-run
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j
+\ No newline at end of file
++run-20210429_143837-3jlupzzq
+\ No newline at end of file
diff --git a/wandb/run-20210429_143837-3jlupzzq/files/output.log b/wandb/run-20210429_143837-3jlupzzq/files/output.log
new file mode 100644
index 0000000..1b59613
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/files/output.log
@@ -0,0 +1 @@
+>>> >>>
\ No newline at end of file
diff --git a/wandb/run-20210429_143837-3jlupzzq/files/requirements.txt b/wandb/run-20210429_143837-3jlupzzq/files/requirements.txt
new file mode 100644
index 0000000..0db8905
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/files/requirements.txt
@@ -0,0 +1,85 @@
+brotlipy==0.7.0
+certifi==2020.12.5
+cffi==1.14.0
+chardet==4.0.0
+click==7.1.2
+colorama==0.4.3
+conda-package-handling==1.7.3
+conda==4.10.1
+configparser==5.0.2
+cryptography==3.4.7
+cycler==0.10.0
+cymem==1.31.2
+cytoolz==0.9.0.1
+dill==0.2.9
+docker-pycreds==0.4.0
+fastai==2.3.0
+fastcore==1.3.19
+fastprogress==1.0.0
+gitdb==4.0.7
+gitpython==3.1.15
+h5py==2.9.0
+idna==2.10
+joblib==1.0.1
+jsonlines==1.2.0
+kiwisolver==1.3.1
+lyricwikia==0.1.11
+mamba==0.12.0
+matplotlib==3.3.4
+mkl-fft==1.3.0
+mkl-random==1.2.1
+mkl-service==2.3.0
+msgpack-numpy==0.4.7.1
+msgpack==0.5.6
+murmurhash==0.28.0
+nltk==3.4.1
+numpy==1.20.1
+olefile==0.46
+overrides==1.9
+packaging==20.9
+pandas==1.2.4
+pathtools==0.1.2
+pillow==8.2.0
+pip==19.0.3
+plac==0.9.6
+preshed==1.0.1
+promise==2.3
+protobuf==3.15.8
+psutil==5.8.0
+pycosat==0.6.3
+pycparser==2.20
+pynvim==0.4.1
+pyopenssl==20.0.1
+pyparsing==2.4.7
+pysocks==1.7.1
+python-dateutil==2.8.1
+pytz==2021.1
+pyyaml==5.4.1
+regex==2018.7.11
+requests==2.25.1
+ruamel-yaml-conda==0.15.100
+scikit-learn==0.24.1
+scipy==1.6.2
+sentry-sdk==1.0.0
+setuptools==52.0.0.post20210125
+shortuuid==1.0.1
+six==1.15.0
+smmap==4.0.0
+spacy==2.0.12
+spotify-cli-linux==1.6.0
+subprocess32==3.5.4
+termcolor==1.1.0
+thinc==6.10.3
+threadpoolctl==2.1.0
+tldr==0.5
+toolz==0.11.1
+torch==1.7.1
+torchvision==0.8.2
+tornado==6.1
+tqdm==4.31.1
+typing-extensions==3.7.4.3
+ujson==4.0.2
+urllib3==1.26.4
+wandb==0.10.28
+wheel==0.36.2
+wrapt==1.10.11
\ No newline at end of file
diff --git a/wandb/run-20210429_143837-3jlupzzq/files/wandb-metadata.json b/wandb/run-20210429_143837-3jlupzzq/files/wandb-metadata.json
new file mode 100644
index 0000000..14168f3
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/files/wandb-metadata.json
@@ -0,0 +1,23 @@
+{
+    "os": "Linux-5.4.0-72-generic-x86_64-with-debian-bullseye-sid",
+    "python": "3.7.2",
+    "heartbeatAt": "2021-04-29T12:38:38.955488",
+    "startedAt": "2021-04-29T12:38:37.785554",
+    "docker": null,
+    "gpu": "GeForce 940MX",
+    "gpu_count": 1,
+    "cpu_count": 4,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "<python with no main file>",
+    "git": {
+        "remote": "git@github.com:MiguelPax/MUStARD.git",
+        "commit": "96fbc572f36a36bb78eede03ab8b438294eb97b9"
+    },
+    "email": "miguelma@kth.se",
+    "root": "/home/miguel/Desktop/NLP/MUStARD",
+    "host": "guthrie",
+    "username": "miguel",
+    "executable": "/home/miguel/miniconda3/envs/mustard/bin/python3"
+}
diff --git a/wandb/run-20210429_143837-3jlupzzq/files/wandb-summary.json b/wandb/run-20210429_143837-3jlupzzq/files/wandb-summary.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/files/wandb-summary.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/wandb/run-20210429_143837-3jlupzzq/logs/debug-internal.log b/wandb/run-20210429_143837-3jlupzzq/logs/debug-internal.log
new file mode 100644
index 0000000..91029a4
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/logs/debug-internal.log
@@ -0,0 +1,112 @@
+2021-04-29 14:38:38,397 INFO    MainThread:30638 [internal.py:wandb_internal():91] W&B internal server running at pid: 30638, started at: 2021-04-29 14:38:38.397668
+2021-04-29 14:38:38,399 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: check_version
+2021-04-29 14:38:38,400 INFO    WriterThread:30638 [datastore.py:open_for_write():77] open: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_143837-3jlupzzq/run-3jlupzzq.wandb
+2021-04-29 14:38:38,401 DEBUG   SenderThread:30638 [sender.py:send():173] send: header
+2021-04-29 14:38:38,402 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: check_version
+2021-04-29 14:38:38,486 DEBUG   SenderThread:30638 [sender.py:send():173] send: run
+2021-04-29 14:38:38,930 INFO    SenderThread:30638 [sender.py:_start_run_threads():681] run started: 3jlupzzq with start time 1619699917
+2021-04-29 14:38:38,932 DEBUG   SenderThread:30638 [sender.py:send():173] send: summary
+2021-04-29 14:38:38,933 INFO    SenderThread:30638 [sender.py:_save_file():808] saving file wandb-summary.json with policy end
+2021-04-29 14:38:38,937 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: run_start
+2021-04-29 14:38:38,954 DEBUG   HandlerThread:30638 [meta.py:__init__():39] meta init
+2021-04-29 14:38:38,955 DEBUG   HandlerThread:30638 [meta.py:__init__():53] meta init done
+2021-04-29 14:38:38,955 DEBUG   HandlerThread:30638 [meta.py:probe():210] probe
+2021-04-29 14:38:38,964 DEBUG   HandlerThread:30638 [meta.py:_setup_git():200] setup git
+2021-04-29 14:38:38,990 DEBUG   HandlerThread:30638 [meta.py:_setup_git():207] setup git done
+2021-04-29 14:38:38,991 DEBUG   HandlerThread:30638 [meta.py:_save_code():89] save code
+2021-04-29 14:38:38,991 WARNING HandlerThread:30638 [meta.py:_save_code():91] unable to save code -- program entry not found
+2021-04-29 14:38:38,991 DEBUG   HandlerThread:30638 [meta.py:_save_patches():127] save patches
+2021-04-29 14:38:39,036 DEBUG   HandlerThread:30638 [meta.py:_save_patches():169] save patches done
+2021-04-29 14:38:39,037 DEBUG   HandlerThread:30638 [meta.py:_save_pip():57] save pip
+2021-04-29 14:38:39,037 DEBUG   HandlerThread:30638 [meta.py:_save_pip():71] save pip done
+2021-04-29 14:38:39,037 DEBUG   HandlerThread:30638 [meta.py:_save_conda():78] save conda
+2021-04-29 14:38:39,572 DEBUG   HandlerThread:30638 [meta.py:_save_conda():86] save conda done
+2021-04-29 14:38:39,572 DEBUG   HandlerThread:30638 [meta.py:probe():252] probe done
+2021-04-29 14:38:39,576 DEBUG   SenderThread:30638 [sender.py:send():173] send: files
+2021-04-29 14:38:39,576 INFO    SenderThread:30638 [sender.py:_save_file():808] saving file wandb-metadata.json with policy now
+2021-04-29 14:38:39,577 INFO    SenderThread:30638 [sender.py:_save_file():808] saving file diff.patch with policy now
+2021-04-29 14:38:39,582 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 14:38:39,583 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 14:38:40,334 WARNING MainThread:30638 [internal.py:wandb_internal():146] Internal process interrupt: 1
+2021-04-29 14:38:44,762 DEBUG   SenderThread:30638 [sender.py:send():173] send: telemetry
+2021-04-29 14:38:44,768 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:45,272 DEBUG   SenderThread:30638 [sender.py:send():173] send: exit
+2021-04-29 14:38:45,273 INFO    SenderThread:30638 [sender.py:send_exit():265] handling exit code: 255
+2021-04-29 14:38:45,273 INFO    SenderThread:30638 [sender.py:send_exit():273] send defer
+2021-04-29 14:38:45,274 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:45,275 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:45,275 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 0
+2021-04-29 14:38:45,276 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:45,276 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 0
+2021-04-29 14:38:45,276 INFO    SenderThread:30638 [sender.py:send_request_defer():318] send defer: 1
+2021-04-29 14:38:45,277 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:45,277 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 1
+2021-04-29 14:38:45,305 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:45,306 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 1
+2021-04-29 14:38:45,306 INFO    SenderThread:30638 [sender.py:send_request_defer():318] send defer: 2
+2021-04-29 14:38:45,306 DEBUG   SenderThread:30638 [sender.py:send():173] send: stats
+2021-04-29 14:38:45,307 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:45,307 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 2
+2021-04-29 14:38:45,307 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:45,307 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 2
+2021-04-29 14:38:45,307 INFO    SenderThread:30638 [sender.py:send_request_defer():318] send defer: 3
+2021-04-29 14:38:45,308 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:45,308 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 3
+2021-04-29 14:38:45,308 DEBUG   SenderThread:30638 [sender.py:send():173] send: summary
+2021-04-29 14:38:45,309 INFO    SenderThread:30638 [sender.py:_save_file():808] saving file wandb-summary.json with policy end
+2021-04-29 14:38:45,309 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:45,309 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 3
+2021-04-29 14:38:45,309 INFO    SenderThread:30638 [sender.py:send_request_defer():318] send defer: 4
+2021-04-29 14:38:45,309 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:45,309 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 4
+2021-04-29 14:38:45,309 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:45,310 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 4
+2021-04-29 14:38:45,378 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:45,938 INFO    SenderThread:30638 [sender.py:send_request_defer():318] send defer: 5
+2021-04-29 14:38:45,939 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:45,940 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:45,941 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 5
+2021-04-29 14:38:45,964 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:45,971 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 5
+2021-04-29 14:38:45,972 INFO    SenderThread:30638 [sender.py:send_request_defer():318] send defer: 6
+2021-04-29 14:38:45,994 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:45,995 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 6
+2021-04-29 14:38:45,995 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:45,996 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 6
+2021-04-29 14:38:46,043 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:46,342 INFO    SenderThread:30638 [sender.py:send_request_defer():318] send defer: 7
+2021-04-29 14:38:46,343 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:46,346 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:46,346 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 7
+2021-04-29 14:38:46,347 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:46,347 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 7
+2021-04-29 14:38:46,347 INFO    SenderThread:30638 [sender.py:send_request_defer():318] send defer: 8
+2021-04-29 14:38:46,350 DEBUG   SenderThread:30638 [sender.py:send():173] send: final
+2021-04-29 14:38:46,358 DEBUG   SenderThread:30638 [sender.py:send():173] send: footer
+2021-04-29 14:38:46,352 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 14:38:46,363 INFO    HandlerThread:30638 [handler.py:handle_request_defer():135] handle defer: 8
+2021-04-29 14:38:46,363 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: defer
+2021-04-29 14:38:46,363 INFO    SenderThread:30638 [sender.py:send_request_defer():282] handle sender defer: 8
+2021-04-29 14:38:46,447 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:46,448 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:46,550 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:46,551 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:46,656 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:46,656 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:46,760 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:46,760 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:46,863 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:46,864 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:46,968 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:46,969 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:47,073 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:47,073 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:47,176 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 14:38:47,177 DEBUG   SenderThread:30638 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 14:38:47,180 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: get_summary
+2021-04-29 14:38:47,182 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: sampled_history
+2021-04-29 14:38:47,184 DEBUG   HandlerThread:30638 [handler.py:handle_request():121] handle_request: shutdown
+2021-04-29 14:38:47,185 INFO    HandlerThread:30638 [handler.py:finish():629] shutting down handler
+2021-04-29 14:38:47,350 INFO    WriterThread:30638 [datastore.py:close():258] close: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_143837-3jlupzzq/run-3jlupzzq.wandb
+2021-04-29 14:38:48,177 INFO    SenderThread:30638 [sender.py:finish():912] shutting down sender
+2021-04-29 14:38:48,179 INFO    MainThread:30638 [internal.py:handle_exit():78] Internal process exited
diff --git a/wandb/run-20210429_143837-3jlupzzq/logs/debug.log b/wandb/run-20210429_143837-3jlupzzq/logs/debug.log
new file mode 100644
index 0000000..ff10271
--- /dev/null
+++ b/wandb/run-20210429_143837-3jlupzzq/logs/debug.log
@@ -0,0 +1,116 @@
+2021-04-29 14:38:37,791 INFO    MainThread:30059 [wandb_setup.py:_flush():69] setting env: {}
+2021-04-29 14:38:37,791 INFO    MainThread:30059 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-04-29 14:38:37,792 INFO    MainThread:30059 [wandb_init.py:_log_setup():336] Logging user logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_143837-3jlupzzq/logs/debug.log
+2021-04-29 14:38:37,792 INFO    MainThread:30059 [wandb_init.py:_log_setup():337] Logging internal logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_143837-3jlupzzq/logs/debug-internal.log
+2021-04-29 14:38:37,793 INFO    MainThread:30059 [wandb_init.py:init():369] calling init triggers
+2021-04-29 14:38:37,793 INFO    MainThread:30059 [wandb_init.py:init():376] wandb.init called with sweep_config: {}
+config: {}
+2021-04-29 14:38:37,794 INFO    MainThread:30059 [wandb_init.py:init():418] starting backend
+2021-04-29 14:38:37,794 INFO    MainThread:30059 [backend.py:_multiprocessing_setup():71] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2021-04-29 14:38:37,816 INFO    MainThread:30059 [backend.py:ensure_launched():123] starting backend process...
+2021-04-29 14:38:37,820 INFO    MainThread:30059 [backend.py:ensure_launched():128] started backend process with pid: 30638
+2021-04-29 14:38:37,822 INFO    MainThread:30059 [wandb_init.py:init():423] backend started and connected
+2021-04-29 14:38:37,824 INFO    MainThread:30059 [wandb_init.py:init():465] updated telemetry
+2021-04-29 14:38:37,824 INFO    MainThread:30059 [wandb_init.py:init():484] communicating current version
+2021-04-29 14:38:38,485 INFO    MainThread:30059 [wandb_init.py:init():489] got version response 
+2021-04-29 14:38:38,485 INFO    MainThread:30059 [wandb_init.py:init():497] communicating run to backend with 30 second timeout
+2021-04-29 14:38:38,935 INFO    MainThread:30059 [wandb_init.py:init():522] starting run threads in backend
+2021-04-29 14:38:39,580 INFO    MainThread:30059 [wandb_run.py:_console_start():1554] atexit reg
+2021-04-29 14:38:39,580 INFO    MainThread:30059 [wandb_run.py:_redirect():1401] redirect: SettingsConsole.REDIRECT
+2021-04-29 14:38:39,581 INFO    MainThread:30059 [wandb_run.py:_redirect():1406] Redirecting console.
+2021-04-29 14:38:39,584 INFO    MainThread:30059 [wandb_run.py:_redirect():1468] Redirects installed.
+2021-04-29 14:38:39,584 INFO    MainThread:30059 [wandb_init.py:init():546] run started, returning control to user process
+2021-04-29 14:38:42,755 INFO    MainThread:30059 [wandb_run.py:_atexit_cleanup():1524] got exitcode: 255
+2021-04-29 14:38:42,756 INFO    MainThread:30059 [wandb_run.py:_restore():1496] restore
+2021-04-29 14:38:45,276 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 2
+}
+pusher_stats {
+  uploaded_bytes: 3509
+  total_bytes: 3509
+}
+
+2021-04-29 14:38:45,940 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 2
+}
+pusher_stats {
+  uploaded_bytes: 3509
+  total_bytes: 3509
+}
+
+2021-04-29 14:38:46,345 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 3509
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:46,449 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 5218
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:46,553 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 5218
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:46,658 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 5218
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:46,761 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 5218
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:46,866 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 5218
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:46,970 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 5218
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:47,074 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 5218
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:47,178 INFO    MainThread:30059 [wandb_run.py:_wait_for_finish():1646] got exit ret: done: true
+exit_result {
+}
+file_counts {
+  wandb_count: 7
+}
+pusher_stats {
+  uploaded_bytes: 5218
+  total_bytes: 5218
+}
+
+2021-04-29 14:38:48,273 INFO    MainThread:30059 [wandb_run.py:_show_files():1868] logging synced files
diff --git a/wandb/run-20210429_143837-3jlupzzq/run-3jlupzzq.wandb b/wandb/run-20210429_143837-3jlupzzq/run-3jlupzzq.wandb
new file mode 100644
index 0000000..7bf6869
Binary files /dev/null and b/wandb/run-20210429_143837-3jlupzzq/run-3jlupzzq.wandb differ
diff --git a/wandb/run-20210429_161812-2jnyzkzu/files/code/train.py b/wandb/run-20210429_161812-2jnyzkzu/files/code/train.py
new file mode 100644
index 0000000..41c9eb3
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/files/code/train.py
@@ -0,0 +1,453 @@
+import argparse
+import json
+import os
+import re
+import sys
+
+from scipy.sparse.construct import random
+
+# import IPython
+import numpy as np
+from sklearn import svm
+from sklearn.ensemble import RandomForestClassifier
+from sklearn.linear_model import LogisticRegression
+from sklearn.metrics import classification_report, confusion_matrix
+from sklearn.naive_bayes import GaussianNB
+from sklearn.pipeline import make_pipeline
+from sklearn.preprocessing import FunctionTransformer, StandardScaler
+from sklearn.svm import LinearSVC
+from fastai.vision import *
+# import fastai.vision
+import torch
+import torch.nn.functional as F
+from torch import nn
+import wandb
+
+import config
+from config import CONFIG_BY_KEY
+from data_loader import DataLoader
+from data_loader import DataHelper
+
+# %%wandb
+wandb.login()
+WANDB_NOTEBOOK_NAME = 'train.py'
+# breakpoint()
+
+class FullyConnectedNN(nn.Module):
+    def __init__(self):
+        # call constructor from superclass
+        super().__init__()
+
+        # define network layers
+        self.fc1 = nn.Linear(1503, 250, bias=True)
+        self.fc2 = nn.Linear(250, 120, bias=True)
+        self.fc3 = nn.Linear(120, 2, bias=True)
+
+    def forward(self, xb):
+        # define forward pass
+        x = xb.float()
+        # x = xb.view(250, -1)
+        x = F.relu(self.fc1(x))
+        x = F.relu(self.fc2(x))
+        x = torch.sigmoid(self.fc3(x))
+        # self.lin3(x)
+        return x
+
+
+def fcnn_train(train_input, train_output):
+    clf = FullyConnectedNN()
+    print(clf)
+    fcnn_learner = Learner(data=data, model=clf, loss_func=nn.CrossEntropyLoss(),metrics=accuracy)
+    fcnn_learner.fit_one_cycle(5,1e-2)
+
+
+def lsvc_train(train_input, train_output):
+    # clf = make_pipeline(
+    # StandardScaler(),
+    # svm.SVC(C=config.svm_c, gamma='scale', kernel='rbf'))
+    clf = LinearSVC(C=run_config.lsvc_c, max_iter=run_config.lsvc_max_iter)
+    return clf.fit(train_input, train_output[:, 1].astype(int))
+
+
+def lsvc_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def lr_train(train_input, train_output):
+    # lr = LogisticRegression(solver='saga',
+    #                         max_iter=10000,
+    #                         penalty='elasticnet',
+    #                         l1_ratio=1)
+    lr = LogisticRegression()
+    return lr.fit(train_input, train_output[:, 1].astype(int))
+
+
+def lr_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    print(confusion_matrix(y_true, y_pred))
+    print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def svm_train(train_input, train_output):
+    clf = make_pipeline(
+        StandardScaler() if run_config.svm_scale else FunctionTransformer(
+            lambda x: x, validate=False),
+        svm.SVC(C=run_config.svm_c,
+                gamma=run_config.svm_gamma,
+                kernel=run_config.svm_kernel))
+
+    return clf.fit(train_input, np.argmax(train_output, axis=1))
+
+
+def svm_test(clf, test_input, test_output):
+
+    probas = clf.predict(test_input)
+    y_pred = probas
+    y_true = np.argmax(test_output, axis=1)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def gauss_train(train_input, train_output):
+    gnb = GaussianNB()
+    return gnb.fit(train_input, train_output[:, 1].astype(int))
+
+
+def gauss_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def rfc_train(train_input, train_output):
+    rfc = RandomForestClassifier(n_estimators=10, random_state=0)
+    return rfc.fit(train_input, train_output[:, 1].astype(int))
+
+
+def rfc_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def trainIO(train_index, test_index):
+
+    # Prepare data
+    train_input, train_output = data.getSplit(train_index)
+    test_input, test_output = data.getSplit(test_index)
+
+    datahelper = DataHelper(train_input, train_output, test_input, test_output,
+                            run_config, data)
+
+    train_input = np.empty((len(train_input), 0))
+    test_input = np.empty((len(test_input), 0))
+
+    if run_config.use_target_text:
+
+        if run_config.use_bert:
+            train_input = np.concatenate(
+                [train_input,
+                 datahelper.getTargetBertFeatures(mode='train')],
+                axis=1)
+            test_input = np.concatenate(
+                [test_input,
+                 datahelper.getTargetBertFeatures(mode='test')],
+                axis=1)
+        else:
+            train_input = np.concatenate([
+                train_input,
+                np.array([
+                    datahelper.pool_text(utt)
+                    for utt in datahelper.vectorizeUtterance(mode='train')
+                ])
+            ],
+                                         axis=1)
+            test_input = np.concatenate([
+                test_input,
+                np.array([
+                    datahelper.pool_text(utt)
+                    for utt in datahelper.vectorizeUtterance(mode='test')
+                ])
+            ],
+                                        axis=1)
+
+    if run_config.use_target_video:
+        train_input = np.concatenate(
+            [train_input,
+             datahelper.getTargetVideoPool(mode='train')], axis=1)
+        test_input = np.concatenate(
+            [test_input,
+             datahelper.getTargetVideoPool(mode='test')], axis=1)
+
+    if run_config.use_target_audio:
+        train_input = np.concatenate(
+            [train_input,
+             datahelper.getTargetAudioPool(mode='train')], axis=1)
+        test_input = np.concatenate(
+            [test_input,
+             datahelper.getTargetAudioPool(mode='test')], axis=1)
+
+    if train_input.shape[1] == 0:
+        print("Invalid modalities")
+        exit(1)
+
+    # Aux input
+
+    if run_config.use_author:
+        train_input_author = datahelper.getAuthor(mode="train")
+        test_input_author = datahelper.getAuthor(mode="test")
+
+        train_input = np.concatenate([train_input, train_input_author], axis=1)
+        test_input = np.concatenate([test_input, test_input_author], axis=1)
+
+    if run_config.use_context:
+        if run_config.use_bert:
+            train_input_context = datahelper.getContextBertFeatures(
+                mode="train")
+            test_input_context = datahelper.getContextBertFeatures(mode="test")
+        else:
+            train_input_context = datahelper.getContextPool(mode="train")
+            test_input_context = datahelper.getContextPool(mode="test")
+
+        train_input = np.concatenate([train_input, train_input_context],
+                                     axis=1)
+        test_input = np.concatenate([test_input, test_input_context], axis=1)
+
+    train_output = datahelper.oneHotOutput(mode="train",
+                                           size=run_config.num_classes)
+    test_output = datahelper.oneHotOutput(mode="test",
+                                          size=run_config.num_classes)
+
+    return train_input, train_output, test_input, test_output
+
+
+def trainSpeakerIndependent(model_name=None):
+
+    run_config.fold = "SI"
+
+    (train_index, test_index) = data.getSpeakerIndependent()
+    train_input, train_output, test_input, test_output = trainIO(
+        train_index, test_index)
+
+    train_func = CLF_MAP[args.clf][0]
+    test_func = CLF_MAP[args.clf][1]
+    clf = train_func(train_input, train_output)
+    test_func(clf, test_input, test_output)
+
+
+def trainSpeakerDependent(model_name=None):
+
+    print(vars(run_config))
+
+    config_params = {
+        k: v
+        for k, v in config.Config.__dict__.items()
+        if not (k.startswith('__') and k.endswith('__'))
+    }
+    # IPython.embed()
+    # breakpoint()
+    wandb.init(config=config_params, project="multimodal-sarcasm")
+    wandb.config.update({"config_key": args.config_key})
+    wandb.run.name = run_config.run_name + re.sub(r'^.*?-', '-',
+                                                  wandb.run.name)
+    # breakpoint()
+    # wandb.config.svm_c=config.svm_c
+
+    # Load data
+    data = DataLoader(run_config)
+    # labels = ['Non-Sarcastic', 'Sarcastic']
+
+    # Iterating over each fold
+    results = []
+    for fold, (train_index,
+               test_index) in enumerate(data.getStratifiedKFold()):
+
+        # Present fold
+        run_config.fold = fold + 1
+        print("Present Fold: {}".format(run_config.fold))
+
+        train_input, train_output, test_input, test_output = trainIO(
+            train_index, test_index)
+
+        train_func = CLF_MAP[run_config.model][0]
+        # test_func = CLF_MAP[args.clf][1]
+        clf = train_func(train_input, train_output)
+
+        y_pred = clf.predict(test_input)
+        # y_probas = clf.predict_proba(test_input)
+        y_test = test_output[:, 1].astype(int)
+        # y_train = train_output[:, 1].astype(int)
+        # importances = clf.feature_importances_
+        # indices = np.argsort(importances)[::-1]
+
+        # To generate random scores
+        # y_pred = np.random.randint(2, size=len(y_pred))
+
+        # To generate majority baseline
+        # y_pred = [0]*len(y_pred)
+
+        # result_str = classification_report(y_true, y_pred, digits=3)
+        # print(confusion_matrix(y_true, y_pred))
+        # print(result_string)
+        result_dict = classification_report(y_test,
+                                            y_pred,
+                                            output_dict=True,
+                                            digits=3)
+        breakpoint()
+
+        results.append(result_dict)
+        # wandb.sklearn.plot_classifier(clf,
+        #                               train_input,
+        #                               test_input,
+        #                               y_train,
+        #                               y_test,
+        #                               y_pred,
+        #                               y_probas,
+        #                               labels,
+        #                               model_name='args.clf',
+        #                               feature_names=None)
+        #
+    # Dumping result to output
+    if not os.path.exists(os.path.dirname(RESULT_FILE)):
+        os.makedirs(os.path.dirname(RESULT_FILE))
+    with open(RESULT_FILE.format(model_name), 'w') as file:
+        json.dump(results, file)
+
+
+def printResult(model_name=None):
+
+    results = json.load(open(RESULT_FILE.format(model_name), "rb"))
+
+    weighted_precision, weighted_recall = [], []
+    weighted_fscores = []
+
+    print("#" * 20)
+    for fold, result in enumerate(results):
+        weighted_fscores.append(result["weighted avg"]["f1-score"])
+        weighted_precision.append(result["weighted avg"]["precision"])
+        weighted_recall.append(result["weighted avg"]["recall"])
+
+        print("Fold {}:".format(fold + 1))
+        print(
+            "Weighted Precision: {}  Weighted Recall: {}  Weighted F score: {}"
+            .format(result["weighted avg"]["precision"],
+                    result["weighted avg"]["recall"],
+                    result["weighted avg"]["f1-score"]))
+    print("#" * 20)
+    print("Avg :")
+    precision = np.mean(weighted_precision)
+    recall = np.mean(weighted_recall)
+    fscore = np.mean(weighted_fscores)
+
+    wandb.log({
+        'weighted_precision': precision,
+        'weighted_recall': recall,
+        'weighted_fscore': fscore
+    })
+
+    print("Weighted Precision: {:.3f}  Weighted Recall: {:.3f}\
+        Weighted F score: {:.3f}".format(precision, recall, fscore))
+
+
+CLF_MAP = {
+    'lsvc': [lsvc_train, lsvc_test],
+    'lr': [lr_train, lr_test],
+    'rfc': [rfc_train, rfc_test],
+    'gauss': [gauss_train, gauss_test],
+    'svm': [svm_train, svm_test],
+    'fcnn': [fcnn_train, None]
+}
+
+# a=CLF_MAP['lr'][0]
+
+# print(a(train_input, train_output))
+
+
+def parse_args():
+    parser = argparse.ArgumentParser()
+    parser.add_argument('--config-key',
+                        default='',
+                        choices=list(CONFIG_BY_KEY.keys()))
+    # parser.add_argument('clf', choices=list(CLF_MAP.keys()))
+    return parser.parse_args()
+
+
+args = parse_args()
+print("Args:", args)
+
+RESULT_FILE = "./output/lsvc{}.json"
+
+# Load config
+run_config = CONFIG_BY_KEY[args.config_key]
+
+# Load data
+data = DataLoader(run_config)
+
+if __name__ == "__main__":
+
+    if run_config.speaker_independent:
+        trainSpeakerIndependent(model_name=run_config.model)
+    else:
+        for _ in range(run_config.runs):
+            trainSpeakerDependent(model_name=run_config.model)
+            printResult(model_name=run_config.model)
diff --git a/wandb/run-20210429_161812-2jnyzkzu/files/conda-environment.yaml b/wandb/run-20210429_161812-2jnyzkzu/files/conda-environment.yaml
new file mode 100644
index 0000000..7c96cd5
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/files/conda-environment.yaml
@@ -0,0 +1,4 @@
+name: mustard
+channels:
+  - defaults
+prefix: /home/miguel/miniconda3/envs/mustard/envs/mustard
diff --git a/wandb/run-20210429_161812-2jnyzkzu/files/config.yaml b/wandb/run-20210429_161812-2jnyzkzu/files/config.yaml
new file mode 100644
index 0000000..40b80ed
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/files/config.yaml
@@ -0,0 +1,95 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.10.28
+    code_path: code/train.py
+    framework: fastai
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.2
+    t:
+      1:
+      - 1
+      - 4
+      - 5
+      4: 3.7.2
+      5: 0.10.28
+      8:
+      - 5
+batch_size:
+  desc: null
+  value: 16
+config_key:
+  desc: null
+  value: tav
+embedding_dim:
+  desc: null
+  value: 300
+epochs:
+  desc: null
+  value: 15
+lsvc_c:
+  desc: null
+  value: 20
+lsvc_max_iter:
+  desc: null
+  value: 10000
+max_context_length:
+  desc: null
+  value: 4
+max_sent_length:
+  desc: null
+  value: 20
+model:
+  desc: null
+  value: lsvc
+num_classes:
+  desc: null
+  value: 2
+run_name:
+  desc: null
+  value: lsvc
+runs:
+  desc: null
+  value: 1
+speaker_independent:
+  desc: null
+  value: false
+svm_c:
+  desc: null
+  value: 10.0
+svm_gamma:
+  desc: null
+  value: scale
+svm_kernel:
+  desc: null
+  value: rbf
+svm_scale:
+  desc: null
+  value: true
+use_author:
+  desc: null
+  value: false
+use_bert:
+  desc: null
+  value: true
+use_context:
+  desc: null
+  value: false
+use_target_audio:
+  desc: null
+  value: false
+use_target_text:
+  desc: null
+  value: false
+use_target_video:
+  desc: null
+  value: false
+val_split:
+  desc: null
+  value: 0.1
+word_embedding_path:
+  desc: null
+  value: /home/sacastro/glove.840B.300d.txt
diff --git a/wandb/run-20210429_161812-2jnyzkzu/files/diff.patch b/wandb/run-20210429_161812-2jnyzkzu/files/diff.patch
new file mode 100644
index 0000000..5b895c0
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/files/diff.patch
@@ -0,0 +1,109 @@
+diff --git a/train.py b/train.py
+index 122991c..41c9eb3 100644
+--- a/train.py
++++ b/train.py
+@@ -2,8 +2,11 @@ import argparse
+ import json
+ import os
+ import re
++import sys
+ 
+-import IPython
++from scipy.sparse.construct import random
++
++# import IPython
+ import numpy as np
+ from sklearn import svm
+ from sklearn.ensemble import RandomForestClassifier
+@@ -13,6 +16,11 @@ from sklearn.naive_bayes import GaussianNB
+ from sklearn.pipeline import make_pipeline
+ from sklearn.preprocessing import FunctionTransformer, StandardScaler
+ from sklearn.svm import LinearSVC
++from fastai.vision import *
++# import fastai.vision
++import torch
++import torch.nn.functional as F
++from torch import nn
+ import wandb
+ 
+ import config
+@@ -23,6 +31,34 @@ from data_loader import DataHelper
+ # %%wandb
+ wandb.login()
+ WANDB_NOTEBOOK_NAME = 'train.py'
++# breakpoint()
++
++class FullyConnectedNN(nn.Module):
++    def __init__(self):
++        # call constructor from superclass
++        super().__init__()
++
++        # define network layers
++        self.fc1 = nn.Linear(1503, 250, bias=True)
++        self.fc2 = nn.Linear(250, 120, bias=True)
++        self.fc3 = nn.Linear(120, 2, bias=True)
++
++    def forward(self, xb):
++        # define forward pass
++        x = xb.float()
++        # x = xb.view(250, -1)
++        x = F.relu(self.fc1(x))
++        x = F.relu(self.fc2(x))
++        x = torch.sigmoid(self.fc3(x))
++        # self.lin3(x)
++        return x
++
++
++def fcnn_train(train_input, train_output):
++    clf = FullyConnectedNN()
++    print(clf)
++    fcnn_learner = Learner(data=data, model=clf, loss_func=nn.CrossEntropyLoss(),metrics=accuracy)
++    fcnn_learner.fit_one_cycle(5,1e-2)
+ 
+ 
+ def lsvc_train(train_input, train_output):
+@@ -317,6 +353,7 @@ def trainSpeakerDependent(model_name=None):
+                                             y_pred,
+                                             output_dict=True,
+                                             digits=3)
++        breakpoint()
+ 
+         results.append(result_dict)
+         # wandb.sklearn.plot_classifier(clf,
+@@ -377,7 +414,8 @@ CLF_MAP = {
+     'lr': [lr_train, lr_test],
+     'rfc': [rfc_train, rfc_test],
+     'gauss': [gauss_train, gauss_test],
+-    'svm': [svm_train, svm_test]
++    'svm': [svm_train, svm_test],
++    'fcnn': [fcnn_train, None]
+ }
+ 
+ # a=CLF_MAP['lr'][0]
+diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
+index d68616c..a09b3a0 120000
+--- a/wandb/debug-internal.log
++++ b/wandb/debug-internal.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug-internal.log
+\ No newline at end of file
++run-20210429_161812-2jnyzkzu/logs/debug-internal.log
+\ No newline at end of file
+diff --git a/wandb/debug.log b/wandb/debug.log
+index d8b0872..1f99b36 120000
+--- a/wandb/debug.log
++++ b/wandb/debug.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug.log
+\ No newline at end of file
++run-20210429_161812-2jnyzkzu/logs/debug.log
+\ No newline at end of file
+diff --git a/wandb/latest-run b/wandb/latest-run
+index efe89a9..55896da 120000
+--- a/wandb/latest-run
++++ b/wandb/latest-run
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j
+\ No newline at end of file
++run-20210429_161812-2jnyzkzu
+\ No newline at end of file
diff --git a/wandb/run-20210429_161812-2jnyzkzu/files/output.log b/wandb/run-20210429_161812-2jnyzkzu/files/output.log
new file mode 100644
index 0000000..e69de29
diff --git a/wandb/run-20210429_161812-2jnyzkzu/files/requirements.txt b/wandb/run-20210429_161812-2jnyzkzu/files/requirements.txt
new file mode 100644
index 0000000..1c1d23c
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/files/requirements.txt
@@ -0,0 +1,99 @@
+backcall==0.2.0
+brotlipy==0.7.0
+certifi==2020.12.5
+cffi==1.14.0
+chardet==4.0.0
+click==7.1.2
+colorama==0.4.3
+conda-package-handling==1.7.3
+conda==4.10.1
+configparser==5.0.2
+cryptography==3.4.7
+cycler==0.10.0
+cymem==1.31.2
+cytoolz==0.9.0.1
+decorator==5.0.6
+dill==0.2.9
+docker-pycreds==0.4.0
+fastai==2.3.0
+fastcore==1.3.19
+fastprogress==1.0.0
+gitdb==4.0.7
+gitpython==3.1.15
+greenlet==1.0.0
+h5py==2.9.0
+idna==2.10
+ipython-genutils==0.2.0
+ipython==7.22.0
+jedi==0.17.2
+joblib==1.0.1
+jsonlines==1.2.0
+kiwisolver==1.3.1
+lyricwikia==0.1.11
+mamba==0.12.0
+matplotlib==3.3.4
+mkl-fft==1.3.0
+mkl-random==1.2.1
+mkl-service==2.3.0
+msgpack-numpy==0.4.7.1
+msgpack==0.5.6
+murmurhash==0.28.0
+nltk==3.4.1
+numpy==1.20.1
+olefile==0.46
+overrides==1.9
+packaging==20.9
+pandas==1.2.4
+parso==0.7.0
+pathtools==0.1.2
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==8.2.0
+pip==19.0.3
+plac==0.9.6
+preshed==1.0.1
+promise==2.3
+prompt-toolkit==3.0.17
+protobuf==3.15.8
+psutil==5.8.0
+ptyprocess==0.7.0
+pycosat==0.6.3
+pycparser==2.20
+pygments==2.8.1
+pynvim==0.4.1
+pyopenssl==20.0.1
+pyparsing==2.4.7
+pysocks==1.7.1
+python-dateutil==2.8.1
+pytz==2021.1
+pyyaml==5.4.1
+regex==2018.7.11
+requests==2.25.1
+ruamel-yaml-conda==0.15.100
+scikit-learn==0.24.2
+scipy==1.6.2
+sentry-sdk==1.0.0
+setuptools==52.0.0.post20210125
+shortuuid==1.0.1
+six==1.15.0
+smmap==4.0.0
+spacy==2.0.12
+spotify-cli-linux==1.6.0
+subprocess32==3.5.4
+termcolor==1.1.0
+thinc==6.10.3
+threadpoolctl==2.1.0
+tldr==0.5
+toolz==0.11.1
+torch==1.7.1
+torchvision==0.8.2
+tornado==6.1
+tqdm==4.31.1
+traitlets==5.0.5
+typing-extensions==3.7.4.3
+ujson==4.0.2
+urllib3==1.26.4
+wandb==0.10.28
+wcwidth==0.2.5
+wheel==0.36.2
+wrapt==1.10.11
\ No newline at end of file
diff --git a/wandb/run-20210429_161812-2jnyzkzu/files/wandb-metadata.json b/wandb/run-20210429_161812-2jnyzkzu/files/wandb-metadata.json
new file mode 100644
index 0000000..b593722
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/files/wandb-metadata.json
@@ -0,0 +1,27 @@
+{
+    "os": "Linux-5.4.0-72-generic-x86_64-with-debian-bullseye-sid",
+    "python": "3.7.2",
+    "heartbeatAt": "2021-04-29T14:18:16.286157",
+    "startedAt": "2021-04-29T14:18:12.153514",
+    "docker": null,
+    "gpu": "GeForce 940MX",
+    "gpu_count": 1,
+    "cpu_count": 4,
+    "cuda": null,
+    "args": [
+        "--config-key",
+        "tav"
+    ],
+    "state": "running",
+    "program": "train.py",
+    "codePath": "train.py",
+    "git": {
+        "remote": "git@github.com:MiguelPax/MUStARD.git",
+        "commit": "96fbc572f36a36bb78eede03ab8b438294eb97b9"
+    },
+    "email": "miguelma@kth.se",
+    "root": "/home/miguel/Desktop/NLP/MUStARD",
+    "host": "guthrie",
+    "username": "miguel",
+    "executable": "/home/miguel/miniconda3/envs/mustard/bin/python3"
+}
diff --git a/wandb/run-20210429_161812-2jnyzkzu/files/wandb-summary.json b/wandb/run-20210429_161812-2jnyzkzu/files/wandb-summary.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/files/wandb-summary.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/wandb/run-20210429_161812-2jnyzkzu/logs/debug-internal.log b/wandb/run-20210429_161812-2jnyzkzu/logs/debug-internal.log
new file mode 100644
index 0000000..c9600ef
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/logs/debug-internal.log
@@ -0,0 +1,288 @@
+2021-04-29 16:18:15,737 INFO    MainThread:255305 [internal.py:wandb_internal():91] W&B internal server running at pid: 255305, started at: 2021-04-29 16:18:15.736931
+2021-04-29 16:18:15,739 INFO    WriterThread:255305 [datastore.py:open_for_write():77] open: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_161812-2jnyzkzu/run-2jnyzkzu.wandb
+2021-04-29 16:18:15,740 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: check_version
+2021-04-29 16:18:15,751 DEBUG   SenderThread:255305 [sender.py:send():173] send: header
+2021-04-29 16:18:15,752 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: check_version
+2021-04-29 16:18:15,878 DEBUG   SenderThread:255305 [sender.py:send():173] send: run
+2021-04-29 16:18:16,254 INFO    SenderThread:255305 [sender.py:_start_run_threads():681] run started: 2jnyzkzu with start time 1619705892
+2021-04-29 16:18:16,255 DEBUG   SenderThread:255305 [sender.py:send():173] send: summary
+2021-04-29 16:18:16,256 INFO    SenderThread:255305 [sender.py:_save_file():808] saving file wandb-summary.json with policy end
+2021-04-29 16:18:16,260 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: run_start
+2021-04-29 16:18:16,284 DEBUG   HandlerThread:255305 [meta.py:__init__():39] meta init
+2021-04-29 16:18:16,285 DEBUG   HandlerThread:255305 [meta.py:__init__():53] meta init done
+2021-04-29 16:18:16,285 DEBUG   HandlerThread:255305 [meta.py:probe():210] probe
+2021-04-29 16:18:16,299 DEBUG   HandlerThread:255305 [meta.py:_setup_git():200] setup git
+2021-04-29 16:18:16,363 DEBUG   HandlerThread:255305 [meta.py:_setup_git():207] setup git done
+2021-04-29 16:18:16,365 DEBUG   HandlerThread:255305 [meta.py:_save_code():89] save code
+2021-04-29 16:18:16,392 DEBUG   HandlerThread:255305 [meta.py:_save_code():110] save code done
+2021-04-29 16:18:16,393 DEBUG   HandlerThread:255305 [meta.py:_save_patches():127] save patches
+2021-04-29 16:18:16,479 DEBUG   HandlerThread:255305 [meta.py:_save_patches():169] save patches done
+2021-04-29 16:18:16,480 DEBUG   HandlerThread:255305 [meta.py:_save_pip():57] save pip
+2021-04-29 16:18:16,481 DEBUG   HandlerThread:255305 [meta.py:_save_pip():71] save pip done
+2021-04-29 16:18:16,481 DEBUG   HandlerThread:255305 [meta.py:_save_conda():78] save conda
+2021-04-29 16:18:17,644 DEBUG   HandlerThread:255305 [meta.py:_save_conda():86] save conda done
+2021-04-29 16:18:17,644 DEBUG   HandlerThread:255305 [meta.py:probe():252] probe done
+2021-04-29 16:18:17,648 DEBUG   SenderThread:255305 [sender.py:send():173] send: files
+2021-04-29 16:18:17,648 INFO    SenderThread:255305 [sender.py:_save_file():808] saving file wandb-metadata.json with policy now
+2021-04-29 16:18:17,648 INFO    SenderThread:255305 [sender.py:_save_file():808] saving file code/train.py with policy now
+2021-04-29 16:18:17,649 INFO    SenderThread:255305 [sender.py:_save_file():808] saving file diff.patch with policy now
+2021-04-29 16:18:17,654 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:18:17,655 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:18:17,980 DEBUG   SenderThread:255305 [sender.py:send():173] send: config
+2021-04-29 16:18:18,360 DEBUG   SenderThread:255305 [sender.py:send():173] send: run
+2021-04-29 16:18:18,898 INFO    SenderThread:255305 [sender.py:send_run():582] updated run: 2jnyzkzu
+2021-04-29 16:18:33,539 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:18:33,545 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:18:46,004 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:18:50,333 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:18:50,340 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:19:06,895 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:19:06,899 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:19:18,078 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:19:22,796 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:19:22,798 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:19:40,501 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:19:40,506 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:19:49,508 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:19:56,817 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:19:56,818 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:20:13,020 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:20:13,022 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:20:20,003 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:20:28,397 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:20:28,397 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:20:43,835 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:20:43,835 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:20:50,242 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:20:59,092 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:20:59,093 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:21:14,559 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:21:14,560 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:21:20,802 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:21:29,919 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:21:29,920 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:21:45,277 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:21:45,278 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:21:51,388 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:22:00,637 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:22:00,638 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:22:15,999 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:22:15,999 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:22:21,926 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:22:31,454 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:22:31,454 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:22:46,813 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:22:46,813 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:22:52,550 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:23:02,076 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:23:02,077 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:23:17,436 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:23:17,437 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:23:23,191 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:23:32,900 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:23:32,901 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:23:48,256 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:23:48,257 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:23:53,747 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:24:03,615 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:24:03,616 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:24:19,124 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:24:19,125 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:24:24,355 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:24:34,406 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:24:34,407 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:24:49,661 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:24:49,662 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:24:54,898 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:25:04,951 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:25:04,952 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:25:20,415 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:25:20,415 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:25:25,505 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:25:35,774 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:25:35,775 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:25:51,135 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:25:51,136 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:25:56,085 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:26:06,376 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:26:06,377 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:26:21,648 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:26:21,648 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:26:26,751 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:26:37,316 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:26:37,316 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:26:52,675 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:26:52,676 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:26:57,293 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:27:08,135 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:27:08,136 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:27:23,497 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:27:23,498 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:27:27,824 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:27:38,854 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:27:38,855 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:27:54,214 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:27:54,215 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:27:58,324 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:28:09,472 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:28:09,473 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:28:24,934 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:28:24,936 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:28:28,940 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:28:40,296 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:28:40,296 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:28:55,554 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:28:55,554 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:28:59,390 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:29:11,014 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:29:11,015 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:29:26,379 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:29:26,380 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:29:30,081 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:29:41,732 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:29:41,732 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:29:57,088 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:29:57,089 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:30:00,586 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:30:12,329 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:30:12,329 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:30:27,603 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:30:27,604 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:30:31,105 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:30:42,968 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:30:42,970 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:30:58,534 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:30:58,536 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:31:01,664 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:31:13,783 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:31:13,784 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:31:29,250 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:31:29,251 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:31:32,139 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:31:44,488 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:31:44,489 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:31:59,968 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:31:59,970 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:32:02,657 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:32:15,230 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:32:15,230 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:32:30,487 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:32:30,488 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:32:33,323 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:32:45,803 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:32:45,803 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:33:01,198 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:33:01,199 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:33:03,858 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:33:16,563 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:33:16,565 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:33:31,817 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:33:31,817 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:33:34,326 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:33:47,279 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:33:47,280 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:34:02,642 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:34:02,643 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:34:04,843 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:34:18,105 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:34:18,106 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:34:33,364 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:34:33,366 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:34:35,390 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:34:48,721 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:34:48,721 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:35:04,083 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:35:04,084 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:35:06,038 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:35:19,353 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:35:19,353 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:35:34,584 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:35:34,584 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:35:36,522 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:35:49,860 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:35:49,860 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:36:05,209 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:36:05,210 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:36:06,973 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:36:20,472 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:36:20,473 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:36:35,833 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:36:35,834 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:36:37,412 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:36:51,187 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:36:51,188 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:37:06,458 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:37:06,459 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:37:08,007 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:37:21,717 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:37:21,717 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:37:37,066 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:37:37,066 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:37:38,466 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:37:52,320 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:37:52,322 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:38:07,784 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:38:07,784 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:38:08,963 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:38:23,037 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:38:23,038 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:38:38,276 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:38:38,276 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:38:39,451 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:38:53,552 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:38:53,553 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:39:08,795 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:39:08,796 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:39:10,009 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:39:24,174 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:39:24,175 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:39:39,528 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:39:39,529 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:39:40,598 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:39:54,798 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:39:54,798 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:40:10,034 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:40:10,036 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:40:11,433 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:40:25,295 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:40:25,295 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:40:40,539 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:40:40,540 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:40:41,823 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:40:55,820 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:40:55,820 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:41:11,076 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:41:11,076 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:41:12,262 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:41:26,327 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:41:26,327 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:41:41,593 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:41:41,594 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:41:42,729 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:41:56,836 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:41:56,837 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:42:12,103 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:42:12,103 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:42:13,018 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:42:27,360 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:42:27,361 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:42:42,618 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:42:42,619 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:42:43,247 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:42:57,841 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:42:57,842 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:43:13,073 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:43:13,073 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:43:13,713 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:43:28,503 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:43:28,503 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:43:37,555 WARNING MainThread:255305 [internal.py:wandb_internal():146] Internal process interrupt: 1
+2021-04-29 16:43:43,862 DEBUG   HandlerThread:255305 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:43:43,862 DEBUG   SenderThread:255305 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:43:44,155 DEBUG   SenderThread:255305 [sender.py:send():173] send: stats
+2021-04-29 16:43:47,545 WARNING MainThread:255305 [internal.py:wandb_internal():146] Internal process interrupt: 2
+2021-04-29 16:43:47,545 ERROR   MainThread:255305 [internal.py:wandb_internal():149] Internal process interrupted.
+2021-04-29 16:43:48,156 INFO    WriterThread:255305 [datastore.py:close():258] close: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_161812-2jnyzkzu/run-2jnyzkzu.wandb
+2021-04-29 16:43:48,156 INFO    SenderThread:255305 [sender.py:finish():912] shutting down sender
+2021-04-29 16:43:48,158 INFO    HandlerThread:255305 [handler.py:finish():629] shutting down handler
+2021-04-29 16:43:49,708 INFO    MainThread:255305 [internal.py:handle_exit():78] Internal process exited
diff --git a/wandb/run-20210429_161812-2jnyzkzu/logs/debug.log b/wandb/run-20210429_161812-2jnyzkzu/logs/debug.log
new file mode 100644
index 0000000..c64b9e0
--- /dev/null
+++ b/wandb/run-20210429_161812-2jnyzkzu/logs/debug.log
@@ -0,0 +1,26 @@
+2021-04-29 16:18:12,158 INFO    MainThread:251424 [wandb_setup.py:_flush():69] setting env: {}
+2021-04-29 16:18:12,158 INFO    MainThread:251424 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-04-29 16:18:12,158 INFO    MainThread:251424 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-04-29 16:18:12,158 INFO    MainThread:251424 [wandb_init.py:_log_setup():336] Logging user logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_161812-2jnyzkzu/logs/debug.log
+2021-04-29 16:18:12,158 INFO    MainThread:251424 [wandb_init.py:_log_setup():337] Logging internal logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_161812-2jnyzkzu/logs/debug-internal.log
+2021-04-29 16:18:12,158 INFO    MainThread:251424 [wandb_init.py:init():369] calling init triggers
+2021-04-29 16:18:12,159 INFO    MainThread:251424 [wandb_init.py:init():376] wandb.init called with sweep_config: {}
+config: {'runs': 1, 'use_context': False, 'use_author': False, 'use_bert': True, 'use_target_text': False, 'use_target_audio': False, 'use_target_video': False, 'speaker_independent': False, 'embedding_dim': 300, 'word_embedding_path': '/home/sacastro/glove.840B.300d.txt', 'max_sent_length': 20, 'max_context_length': 4, 'num_classes': 2, 'epochs': 15, 'batch_size': 16, 'val_split': 0.1, 'model': 'lsvc', 'run_name': 'lsvc', 'svm_c': 10.0, 'svm_scale': True, 'svm_gamma': 'scale', 'svm_kernel': 'rbf', 'lsvc_c': 20, 'lsvc_max_iter': 10000}
+2021-04-29 16:18:12,159 INFO    MainThread:251424 [wandb_init.py:init():418] starting backend
+2021-04-29 16:18:12,159 INFO    MainThread:251424 [backend.py:_multiprocessing_setup():71] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2021-04-29 16:18:12,203 INFO    MainThread:251424 [backend.py:ensure_launched():123] starting backend process...
+2021-04-29 16:18:12,285 INFO    MainThread:251424 [backend.py:ensure_launched():128] started backend process with pid: 255305
+2021-04-29 16:18:12,368 INFO    MainThread:251424 [wandb_init.py:init():423] backend started and connected
+2021-04-29 16:18:12,547 INFO    MainThread:251424 [wandb_init.py:init():465] updated telemetry
+2021-04-29 16:18:12,548 INFO    MainThread:251424 [wandb_init.py:init():484] communicating current version
+2021-04-29 16:18:15,874 INFO    MainThread:251424 [wandb_init.py:init():489] got version response 
+2021-04-29 16:18:15,874 INFO    MainThread:251424 [wandb_init.py:init():497] communicating run to backend with 30 second timeout
+2021-04-29 16:18:16,256 INFO    MainThread:251424 [wandb_init.py:init():522] starting run threads in backend
+2021-04-29 16:18:17,652 INFO    MainThread:251424 [wandb_run.py:_console_start():1554] atexit reg
+2021-04-29 16:18:17,653 INFO    MainThread:251424 [wandb_run.py:_redirect():1401] redirect: SettingsConsole.REDIRECT
+2021-04-29 16:18:17,653 INFO    MainThread:251424 [wandb_run.py:_redirect():1406] Redirecting console.
+2021-04-29 16:18:17,664 INFO    MainThread:251424 [wandb_run.py:_redirect():1468] Redirects installed.
+2021-04-29 16:18:17,665 INFO    MainThread:251424 [wandb_init.py:init():546] run started, returning control to user process
+2021-04-29 16:18:17,665 INFO    MainThread:251424 [wandb_run.py:_config_callback():779] config_cb None None {'config_key': 'tav'}
+2021-04-29 16:44:32,457 INFO    MainThread:251424 [wandb_run.py:_atexit_cleanup():1524] got exitcode: 1
+2021-04-29 16:44:32,484 INFO    MainThread:251424 [wandb_run.py:_restore():1496] restore
diff --git a/wandb/run-20210429_161812-2jnyzkzu/run-2jnyzkzu.wandb b/wandb/run-20210429_161812-2jnyzkzu/run-2jnyzkzu.wandb
new file mode 100644
index 0000000..932a14f
Binary files /dev/null and b/wandb/run-20210429_161812-2jnyzkzu/run-2jnyzkzu.wandb differ
diff --git a/wandb/run-20210429_164453-1e8ztnhh/files/code/train.py b/wandb/run-20210429_164453-1e8ztnhh/files/code/train.py
new file mode 100644
index 0000000..207d2b5
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/files/code/train.py
@@ -0,0 +1,450 @@
+import argparse
+import json
+import os
+import re
+import sys
+
+from scipy.sparse.construct import random
+
+# import IPython
+import numpy as np
+from sklearn import svm
+from sklearn.ensemble import RandomForestClassifier
+from sklearn.linear_model import LogisticRegression
+from sklearn.metrics import classification_report, confusion_matrix
+from sklearn.naive_bayes import GaussianNB
+from sklearn.pipeline import make_pipeline
+from sklearn.preprocessing import FunctionTransformer, StandardScaler
+from sklearn.svm import LinearSVC
+from fastai.vision import *
+# import fastai.vision
+import torch
+import torch.nn.functional as F
+from torch import nn
+import wandb
+
+import config
+from config import CONFIG_BY_KEY
+from data_loader import DataLoader
+from data_loader import DataHelper
+
+# %%wandb
+wandb.login()
+WANDB_NOTEBOOK_NAME = 'train.py'
+# breakpoint()
+
+class FullyConnectedNN(nn.Module):
+    def __init__(self):
+        # call constructor from superclass
+        super().__init__()
+
+        # define network layers
+        self.fc1 = nn.Linear(1503, 250, bias=True)
+        self.fc2 = nn.Linear(250, 120, bias=True)
+        self.fc3 = nn.Linear(120, 2, bias=True)
+
+    def forward(self, xb):
+        # define forward pass
+        x = xb.float()
+        # x = xb.view(250, -1)
+        x = F.relu(self.fc1(x))
+        x = F.relu(self.fc2(x))
+        x = torch.sigmoid(self.fc3(x))
+        # self.lin3(x)
+        return x
+
+
+def fcnn_train(train_input, train_output):
+    clf = FullyConnectedNN()
+    # print(clf)
+    fcnn_learner = Learner(data=data, model=clf, loss_func=nn.CrossEntropyLoss(),metrics=accuracy)
+    fcnn_learner.fit_one_cycle(5,1e-2)
+
+
+def lsvc_train(train_input, train_output):
+    # clf = make_pipeline(
+    # StandardScaler(),
+    # svm.SVC(C=config.svm_c, gamma='scale', kernel='rbf'))
+    clf = LinearSVC(C=run_config.lsvc_c, max_iter=run_config.lsvc_max_iter)
+# print(sys.executable)
+    return clf.fit(train_input, train_output[:, 1].astype(int))
+
+
+def lsvc_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def lr_train(train_input, train_output):
+    # lr = LogisticRegression(solver='saga',
+    #                         max_iter=10000,
+    #                         penalty='elasticnet',
+    #                         l1_ratio=1)
+    lr = LogisticRegression()
+    return lr.fit(train_input, train_output[:, 1].astype(int))
+
+
+def lr_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    print(confusion_matrix(y_true, y_pred))
+    print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def svm_train(train_input, train_output):
+    clf = make_pipeline(
+        StandardScaler() if run_config.svm_scale else FunctionTransformer(
+            lambda x: x, validate=False),
+        svm.SVC(C=run_config.svm_c,
+                gamma=run_config.svm_gamma,
+                kernel=run_config.svm_kernel))
+
+    return clf.fit(train_input, np.argmax(train_output, axis=1))
+
+
+def svm_test(clf, test_input, test_output):
+
+    probas = clf.predict(test_input)
+    y_pred = probas
+    y_true = np.argmax(test_output, axis=1)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def gauss_train(train_input, train_output):
+    gnb = GaussianNB()
+    return gnb.fit(train_input, train_output[:, 1].astype(int))
+
+
+def gauss_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def rfc_train(train_input, train_output):
+    rfc = RandomForestClassifier(n_estimators=10, random_state=0)
+    return rfc.fit(train_input, train_output[:, 1].astype(int))
+
+
+def rfc_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def trainIO(train_index, test_index):
+
+    # Prepare data
+    train_input, train_output = data.getSplit(train_index)
+    test_input, test_output = data.getSplit(test_index)
+
+    datahelper = DataHelper(train_input, train_output, test_input, test_output,
+                            run_config, data)
+
+    train_input = np.empty((len(train_input), 0))
+    test_input = np.empty((len(test_input), 0))
+
+    if run_config.use_target_text:
+
+        if run_config.use_bert:
+            train_input = np.concatenate(
+                [train_input,
+                 datahelper.getTargetBertFeatures(mode='train')],
+                axis=1)
+            test_input = np.concatenate(
+                [test_input,
+                 datahelper.getTargetBertFeatures(mode='test')],
+                axis=1)
+        else:
+            train_input = np.concatenate([
+                train_input,
+                np.array([
+                    datahelper.pool_text(utt)
+                    for utt in datahelper.vectorizeUtterance(mode='train')
+                ])
+            ],
+                                         axis=1)
+            test_input = np.concatenate([
+                test_input,
+                np.array([
+                    datahelper.pool_text(utt)
+                    for utt in datahelper.vectorizeUtterance(mode='test')
+                ])
+            ],
+                                        axis=1)
+
+    if run_config.use_target_video:
+        train_input = np.concatenate(
+            [train_input,
+             datahelper.getTargetVideoPool(mode='train')], axis=1)
+        test_input = np.concatenate(
+            [test_input,
+             datahelper.getTargetVideoPool(mode='test')], axis=1)
+
+    if run_config.use_target_audio:
+        train_input = np.concatenate(
+            [train_input,
+             datahelper.getTargetAudioPool(mode='train')], axis=1)
+        test_input = np.concatenate(
+            [test_input,
+             datahelper.getTargetAudioPool(mode='test')], axis=1)
+
+    if train_input.shape[1] == 0:
+        print("Invalid modalities")
+        exit(1)
+
+    # Aux input
+
+    if run_config.use_author:
+        train_input_author = datahelper.getAuthor(mode="train")
+        test_input_author = datahelper.getAuthor(mode="test")
+
+        train_input = np.concatenate([train_input, train_input_author], axis=1)
+        test_input = np.concatenate([test_input, test_input_author], axis=1)
+
+    if run_config.use_context:
+        if run_config.use_bert:
+            train_input_context = datahelper.getContextBertFeatures(
+                mode="train")
+            test_input_context = datahelper.getContextBertFeatures(mode="test")
+        else:
+            train_input_context = datahelper.getContextPool(mode="train")
+            test_input_context = datahelper.getContextPool(mode="test")
+
+        train_input = np.concatenate([train_input, train_input_context],
+                                     axis=1)
+        test_input = np.concatenate([test_input, test_input_context], axis=1)
+
+    train_output = datahelper.oneHotOutput(mode="train",
+                                           size=run_config.num_classes)
+    test_output = datahelper.oneHotOutput(mode="test",
+                                          size=run_config.num_classes)
+
+    return train_input, train_output, test_input, test_output
+
+
+def trainSpeakerIndependent(model_name=None):
+
+    run_config.fold = "SI"
+
+    (train_index, test_index) = data.getSpeakerIndependent()
+    train_input, train_output, test_input, test_output = trainIO(
+        train_index, test_index)
+
+    train_func = CLF_MAP[args.clf][0]
+    test_func = CLF_MAP[args.clf][1]
+    clf = train_func(train_input, train_output)
+    test_func(clf, test_input, test_output)
+
+
+def trainSpeakerDependent(model_name=None):
+
+    print(vars(run_config))
+
+    config_params = {
+        k: v
+        for k, v in config.Config.__dict__.items()
+        if not (k.startswith('__') and k.endswith('__'))
+    }
+    # IPython.embed()
+    # breakpoint()
+    wandb.init(config=config_params, project="multimodal-sarcasm")
+    wandb.config.update({"config_key": args.config_key})
+    wandb.run.name = run_config.run_name + re.sub(r'^.*?-', '-',
+                                                  wandb.run.name)
+    # breakpoint()
+    # wandb.config.svm_c=config.svm_c
+
+    # Load data
+    data = DataLoader(run_config)
+    # labels = ['Non-Sarcastic', 'Sarcastic']
+
+    # Iterating over each fold
+    results = []
+    for fold, (train_index,
+               test_index) in enumerate(data.getStratifiedKFold()):
+
+        # Present fold
+        run_config.fold = fold + 1
+        print("Present Fold: {}".format(run_config.fold))
+
+        train_input, train_output, test_input, test_output = trainIO(
+            train_index, test_index)
+
+        train_func = CLF_MAP[run_config.model][0]
+        # test_func = CLF_MAP[args.clf][1]
+        clf = train_func(train_input, train_output)
+
+        y_pred = clf.predict(test_input)
+        # y_probas = clf.predict_proba(test_input)
+        y_test = test_output[:, 1].astype(int)
+        # y_train = train_output[:, 1].astype(int)
+        # importances = clf.feature_importances_
+        # indices = np.argsort(importances)[::-1]
+
+        # To generate random scores
+        # y_pred = np.random.randint(2, size=len(y_pred))
+
+        # To generate majority baseline
+        # y_pred = [0]*len(y_pred)
+
+        # result_str = classification_report(y_true, y_pred, digits=3)
+        # print(confusion_matrix(y_true, y_pred))
+        # print(result_string)
+        result_dict = classification_report(y_test, y_pred, output_dict=True, digits=3)
+
+        results.append(result_dict)
+        # wandb.sklearn.plot_classifier(clf,
+        #                               train_input,
+        #                               test_input,
+        #                               y_train,
+        #                               y_test,
+        #                               y_pred,
+        #                               y_probas,
+        #                               labels,
+        #                               model_name='args.clf',
+        #                               feature_names=None)
+        #
+    # Dumping result to output
+    if not os.path.exists(os.path.dirname(RESULT_FILE)):
+        os.makedirs(os.path.dirname(RESULT_FILE))
+    with open(RESULT_FILE.format(model_name), 'w') as file:
+        json.dump(results, file)
+
+
+def printResult(model_name=None):
+
+    results = json.load(open(RESULT_FILE.format(model_name), "rb"))
+
+    weighted_precision, weighted_recall = [], []
+    weighted_fscores = []
+
+    print("#" * 20)
+    for fold, result in enumerate(results):
+        weighted_fscores.append(result["weighted avg"]["f1-score"])
+        weighted_precision.append(result["weighted avg"]["precision"])
+        weighted_recall.append(result["weighted avg"]["recall"])
+
+        print("Fold {}:".format(fold + 1))
+        print(
+            "Weighted Precision: {}  Weighted Recall: {}  Weighted F score: {}"
+            .format(result["weighted avg"]["precision"],
+                    result["weighted avg"]["recall"],
+                    result["weighted avg"]["f1-score"]))
+    print("#" * 20)
+    print("Avg :")
+    precision = np.mean(weighted_precision)
+    recall = np.mean(weighted_recall)
+    fscore = np.mean(weighted_fscores)
+
+    wandb.log({
+        'weighted_precision': precision,
+        'weighted_recall': recall,
+        'weighted_fscore': fscore
+    })
+
+    print("Weighted Precision: {:.3f}  Weighted Recall: {:.3f}\
+        Weighted F score: {:.3f}".format(precision, recall, fscore))
+
+
+CLF_MAP = {
+    'lsvc': [lsvc_train, lsvc_test],
+    'lr': [lr_train, lr_test],
+    'rfc': [rfc_train, rfc_test],
+    'gauss': [gauss_train, gauss_test],
+    'svm': [svm_train, svm_test],
+    'fcnn': [fcnn_train, None]
+}
+
+# a=CLF_MAP['lr'][0]
+
+# print(a(train_input, train_output))
+
+
+def parse_args():
+    parser = argparse.ArgumentParser()
+    parser.add_argument('--config-key',
+                        default='',
+                        choices=list(CONFIG_BY_KEY.keys()))
+    # parser.add_argument('clf', choices=list(CLF_MAP.keys()))
+    return parser.parse_args()
+
+
+args = parse_args()
+print("Args:", args)
+
+RESULT_FILE = "./output/lsvc{}.json"
+
+# Load config
+run_config = CONFIG_BY_KEY[args.config_key]
+
+# Load data
+data = DataLoader(run_config)
+
+if __name__ == "__main__":
+
+    if run_config.speaker_independent:
+        trainSpeakerIndependent(model_name=run_config.model)
+    else:
+        for _ in range(run_config.runs):
+            trainSpeakerDependent(model_name=run_config.model)
+            printResult(model_name=run_config.model)
diff --git a/wandb/run-20210429_164453-1e8ztnhh/files/conda-environment.yaml b/wandb/run-20210429_164453-1e8ztnhh/files/conda-environment.yaml
new file mode 100644
index 0000000..7c96cd5
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/files/conda-environment.yaml
@@ -0,0 +1,4 @@
+name: mustard
+channels:
+  - defaults
+prefix: /home/miguel/miniconda3/envs/mustard/envs/mustard
diff --git a/wandb/run-20210429_164453-1e8ztnhh/files/config.yaml b/wandb/run-20210429_164453-1e8ztnhh/files/config.yaml
new file mode 100644
index 0000000..95d313f
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/files/config.yaml
@@ -0,0 +1,99 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.10.28
+    code_path: code/train.py
+    framework: fastai
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.2
+    t:
+      1:
+      - 1
+      - 4
+      - 5
+      2:
+      - 1
+      - 4
+      - 5
+      4: 3.7.2
+      5: 0.10.28
+      8:
+      - 5
+batch_size:
+  desc: null
+  value: 16
+config_key:
+  desc: null
+  value: tav
+embedding_dim:
+  desc: null
+  value: 300
+epochs:
+  desc: null
+  value: 15
+lsvc_c:
+  desc: null
+  value: 20
+lsvc_max_iter:
+  desc: null
+  value: 10000
+max_context_length:
+  desc: null
+  value: 4
+max_sent_length:
+  desc: null
+  value: 20
+model:
+  desc: null
+  value: gauss
+num_classes:
+  desc: null
+  value: 2
+run_name:
+  desc: null
+  value: gauss
+runs:
+  desc: null
+  value: 1
+speaker_independent:
+  desc: null
+  value: false
+svm_c:
+  desc: null
+  value: 10.0
+svm_gamma:
+  desc: null
+  value: scale
+svm_kernel:
+  desc: null
+  value: rbf
+svm_scale:
+  desc: null
+  value: true
+use_author:
+  desc: null
+  value: false
+use_bert:
+  desc: null
+  value: true
+use_context:
+  desc: null
+  value: false
+use_target_audio:
+  desc: null
+  value: false
+use_target_text:
+  desc: null
+  value: false
+use_target_video:
+  desc: null
+  value: false
+val_split:
+  desc: null
+  value: 0.1
+word_embedding_path:
+  desc: null
+  value: /home/sacastro/glove.840B.300d.txt
diff --git a/wandb/run-20210429_164453-1e8ztnhh/files/diff.patch b/wandb/run-20210429_164453-1e8ztnhh/files/diff.patch
new file mode 100644
index 0000000..4f9a453
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/files/diff.patch
@@ -0,0 +1,134 @@
+diff --git a/config.py b/config.py
+index 856403f..e34a16b 100644
+--- a/config.py
++++ b/config.py
+@@ -23,7 +23,7 @@ class Config:
+     batch_size = 16
+     val_split = 0.1  # Percentage of data in validation set from training data
+ 
+-    model = 'lsvc'
++    model = 'gauss'
+     run_name = model
+ 
+     svm_c = 10.0
+diff --git a/train.py b/train.py
+index 122991c..207d2b5 100644
+--- a/train.py
++++ b/train.py
+@@ -2,8 +2,11 @@ import argparse
+ import json
+ import os
+ import re
++import sys
+ 
+-import IPython
++from scipy.sparse.construct import random
++
++# import IPython
+ import numpy as np
+ from sklearn import svm
+ from sklearn.ensemble import RandomForestClassifier
+@@ -13,6 +16,11 @@ from sklearn.naive_bayes import GaussianNB
+ from sklearn.pipeline import make_pipeline
+ from sklearn.preprocessing import FunctionTransformer, StandardScaler
+ from sklearn.svm import LinearSVC
++from fastai.vision import *
++# import fastai.vision
++import torch
++import torch.nn.functional as F
++from torch import nn
+ import wandb
+ 
+ import config
+@@ -23,6 +31,34 @@ from data_loader import DataHelper
+ # %%wandb
+ wandb.login()
+ WANDB_NOTEBOOK_NAME = 'train.py'
++# breakpoint()
++
++class FullyConnectedNN(nn.Module):
++    def __init__(self):
++        # call constructor from superclass
++        super().__init__()
++
++        # define network layers
++        self.fc1 = nn.Linear(1503, 250, bias=True)
++        self.fc2 = nn.Linear(250, 120, bias=True)
++        self.fc3 = nn.Linear(120, 2, bias=True)
++
++    def forward(self, xb):
++        # define forward pass
++        x = xb.float()
++        # x = xb.view(250, -1)
++        x = F.relu(self.fc1(x))
++        x = F.relu(self.fc2(x))
++        x = torch.sigmoid(self.fc3(x))
++        # self.lin3(x)
++        return x
++
++
++def fcnn_train(train_input, train_output):
++    clf = FullyConnectedNN()
++    # print(clf)
++    fcnn_learner = Learner(data=data, model=clf, loss_func=nn.CrossEntropyLoss(),metrics=accuracy)
++    fcnn_learner.fit_one_cycle(5,1e-2)
+ 
+ 
+ def lsvc_train(train_input, train_output):
+@@ -30,6 +66,7 @@ def lsvc_train(train_input, train_output):
+     # StandardScaler(),
+     # svm.SVC(C=config.svm_c, gamma='scale', kernel='rbf'))
+     clf = LinearSVC(C=run_config.lsvc_c, max_iter=run_config.lsvc_max_iter)
++# print(sys.executable)
+     return clf.fit(train_input, train_output[:, 1].astype(int))
+ 
+ 
+@@ -313,10 +350,7 @@ def trainSpeakerDependent(model_name=None):
+         # result_str = classification_report(y_true, y_pred, digits=3)
+         # print(confusion_matrix(y_true, y_pred))
+         # print(result_string)
+-        result_dict = classification_report(y_test,
+-                                            y_pred,
+-                                            output_dict=True,
+-                                            digits=3)
++        result_dict = classification_report(y_test, y_pred, output_dict=True, digits=3)
+ 
+         results.append(result_dict)
+         # wandb.sklearn.plot_classifier(clf,
+@@ -377,7 +411,8 @@ CLF_MAP = {
+     'lr': [lr_train, lr_test],
+     'rfc': [rfc_train, rfc_test],
+     'gauss': [gauss_train, gauss_test],
+-    'svm': [svm_train, svm_test]
++    'svm': [svm_train, svm_test],
++    'fcnn': [fcnn_train, None]
+ }
+ 
+ # a=CLF_MAP['lr'][0]
+diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
+index d68616c..f24afd0 120000
+--- a/wandb/debug-internal.log
++++ b/wandb/debug-internal.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug-internal.log
+\ No newline at end of file
++run-20210429_164453-1e8ztnhh/logs/debug-internal.log
+\ No newline at end of file
+diff --git a/wandb/debug.log b/wandb/debug.log
+index d8b0872..e71d029 120000
+--- a/wandb/debug.log
++++ b/wandb/debug.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug.log
+\ No newline at end of file
++run-20210429_164453-1e8ztnhh/logs/debug.log
+\ No newline at end of file
+diff --git a/wandb/latest-run b/wandb/latest-run
+index efe89a9..10c4e75 120000
+--- a/wandb/latest-run
++++ b/wandb/latest-run
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j
+\ No newline at end of file
++run-20210429_164453-1e8ztnhh
+\ No newline at end of file
diff --git a/wandb/run-20210429_164453-1e8ztnhh/files/output.log b/wandb/run-20210429_164453-1e8ztnhh/files/output.log
new file mode 100644
index 0000000..3591ee1
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/files/output.log
@@ -0,0 +1 @@
+Weighted Precision: 0.643  Weighted Recall: 0.597        Weighted F score: 0.557
\ No newline at end of file
diff --git a/wandb/run-20210429_164453-1e8ztnhh/files/requirements.txt b/wandb/run-20210429_164453-1e8ztnhh/files/requirements.txt
new file mode 100644
index 0000000..1c1d23c
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/files/requirements.txt
@@ -0,0 +1,99 @@
+backcall==0.2.0
+brotlipy==0.7.0
+certifi==2020.12.5
+cffi==1.14.0
+chardet==4.0.0
+click==7.1.2
+colorama==0.4.3
+conda-package-handling==1.7.3
+conda==4.10.1
+configparser==5.0.2
+cryptography==3.4.7
+cycler==0.10.0
+cymem==1.31.2
+cytoolz==0.9.0.1
+decorator==5.0.6
+dill==0.2.9
+docker-pycreds==0.4.0
+fastai==2.3.0
+fastcore==1.3.19
+fastprogress==1.0.0
+gitdb==4.0.7
+gitpython==3.1.15
+greenlet==1.0.0
+h5py==2.9.0
+idna==2.10
+ipython-genutils==0.2.0
+ipython==7.22.0
+jedi==0.17.2
+joblib==1.0.1
+jsonlines==1.2.0
+kiwisolver==1.3.1
+lyricwikia==0.1.11
+mamba==0.12.0
+matplotlib==3.3.4
+mkl-fft==1.3.0
+mkl-random==1.2.1
+mkl-service==2.3.0
+msgpack-numpy==0.4.7.1
+msgpack==0.5.6
+murmurhash==0.28.0
+nltk==3.4.1
+numpy==1.20.1
+olefile==0.46
+overrides==1.9
+packaging==20.9
+pandas==1.2.4
+parso==0.7.0
+pathtools==0.1.2
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==8.2.0
+pip==19.0.3
+plac==0.9.6
+preshed==1.0.1
+promise==2.3
+prompt-toolkit==3.0.17
+protobuf==3.15.8
+psutil==5.8.0
+ptyprocess==0.7.0
+pycosat==0.6.3
+pycparser==2.20
+pygments==2.8.1
+pynvim==0.4.1
+pyopenssl==20.0.1
+pyparsing==2.4.7
+pysocks==1.7.1
+python-dateutil==2.8.1
+pytz==2021.1
+pyyaml==5.4.1
+regex==2018.7.11
+requests==2.25.1
+ruamel-yaml-conda==0.15.100
+scikit-learn==0.24.2
+scipy==1.6.2
+sentry-sdk==1.0.0
+setuptools==52.0.0.post20210125
+shortuuid==1.0.1
+six==1.15.0
+smmap==4.0.0
+spacy==2.0.12
+spotify-cli-linux==1.6.0
+subprocess32==3.5.4
+termcolor==1.1.0
+thinc==6.10.3
+threadpoolctl==2.1.0
+tldr==0.5
+toolz==0.11.1
+torch==1.7.1
+torchvision==0.8.2
+tornado==6.1
+tqdm==4.31.1
+traitlets==5.0.5
+typing-extensions==3.7.4.3
+ujson==4.0.2
+urllib3==1.26.4
+wandb==0.10.28
+wcwidth==0.2.5
+wheel==0.36.2
+wrapt==1.10.11
\ No newline at end of file
diff --git a/wandb/run-20210429_164453-1e8ztnhh/files/wandb-metadata.json b/wandb/run-20210429_164453-1e8ztnhh/files/wandb-metadata.json
new file mode 100644
index 0000000..14d3424
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/files/wandb-metadata.json
@@ -0,0 +1,27 @@
+{
+    "os": "Linux-5.4.0-72-generic-x86_64-with-debian-bullseye-sid",
+    "python": "3.7.2",
+    "heartbeatAt": "2021-04-29T14:44:54.922119",
+    "startedAt": "2021-04-29T14:44:53.483473",
+    "docker": null,
+    "gpu": "GeForce 940MX",
+    "gpu_count": 1,
+    "cpu_count": 4,
+    "cuda": null,
+    "args": [
+        "--config-key",
+        "tav"
+    ],
+    "state": "running",
+    "program": "train.py",
+    "codePath": "train.py",
+    "git": {
+        "remote": "git@github.com:MiguelPax/MUStARD.git",
+        "commit": "96fbc572f36a36bb78eede03ab8b438294eb97b9"
+    },
+    "email": "miguelma@kth.se",
+    "root": "/home/miguel/Desktop/NLP/MUStARD",
+    "host": "guthrie",
+    "username": "miguel",
+    "executable": "/home/miguel/miniconda3/envs/mustard/bin/python3"
+}
diff --git a/wandb/run-20210429_164453-1e8ztnhh/files/wandb-summary.json b/wandb/run-20210429_164453-1e8ztnhh/files/wandb-summary.json
new file mode 100644
index 0000000..3963322
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/files/wandb-summary.json
@@ -0,0 +1 @@
+{"weighted_precision": 0.6425556030568748, "weighted_recall": 0.5971014492753624, "weighted_fscore": 0.5567809361586864, "_runtime": 55, "_timestamp": 1619707548, "_step": 0}
\ No newline at end of file
diff --git a/wandb/run-20210429_164453-1e8ztnhh/logs/debug-internal.log b/wandb/run-20210429_164453-1e8ztnhh/logs/debug-internal.log
new file mode 100644
index 0000000..a2dada2
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/logs/debug-internal.log
@@ -0,0 +1,123 @@
+2021-04-29 16:44:54,407 INFO    MainThread:313642 [internal.py:wandb_internal():91] W&B internal server running at pid: 313642, started at: 2021-04-29 16:44:54.407117
+2021-04-29 16:44:54,409 INFO    WriterThread:313642 [datastore.py:open_for_write():77] open: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_164453-1e8ztnhh/run-1e8ztnhh.wandb
+2021-04-29 16:44:54,410 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: check_version
+2021-04-29 16:44:54,411 DEBUG   SenderThread:313642 [sender.py:send():173] send: header
+2021-04-29 16:44:54,411 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: check_version
+2021-04-29 16:44:54,519 DEBUG   SenderThread:313642 [sender.py:send():173] send: run
+2021-04-29 16:44:54,904 INFO    SenderThread:313642 [sender.py:_start_run_threads():681] run started: 1e8ztnhh with start time 1619707493
+2021-04-29 16:44:54,905 DEBUG   SenderThread:313642 [sender.py:send():173] send: summary
+2021-04-29 16:44:54,906 INFO    SenderThread:313642 [sender.py:_save_file():808] saving file wandb-summary.json with policy end
+2021-04-29 16:44:54,907 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: run_start
+2021-04-29 16:44:54,921 DEBUG   HandlerThread:313642 [meta.py:__init__():39] meta init
+2021-04-29 16:44:54,921 DEBUG   HandlerThread:313642 [meta.py:__init__():53] meta init done
+2021-04-29 16:44:54,922 DEBUG   HandlerThread:313642 [meta.py:probe():210] probe
+2021-04-29 16:44:54,929 DEBUG   HandlerThread:313642 [meta.py:_setup_git():200] setup git
+2021-04-29 16:44:54,944 DEBUG   HandlerThread:313642 [meta.py:_setup_git():207] setup git done
+2021-04-29 16:44:54,944 DEBUG   HandlerThread:313642 [meta.py:_save_code():89] save code
+2021-04-29 16:44:54,951 DEBUG   HandlerThread:313642 [meta.py:_save_code():110] save code done
+2021-04-29 16:44:54,951 DEBUG   HandlerThread:313642 [meta.py:_save_patches():127] save patches
+2021-04-29 16:44:54,990 DEBUG   HandlerThread:313642 [meta.py:_save_patches():169] save patches done
+2021-04-29 16:44:54,990 DEBUG   HandlerThread:313642 [meta.py:_save_pip():57] save pip
+2021-04-29 16:44:54,991 DEBUG   HandlerThread:313642 [meta.py:_save_pip():71] save pip done
+2021-04-29 16:44:54,991 DEBUG   HandlerThread:313642 [meta.py:_save_conda():78] save conda
+2021-04-29 16:44:55,583 DEBUG   HandlerThread:313642 [meta.py:_save_conda():86] save conda done
+2021-04-29 16:44:55,583 DEBUG   HandlerThread:313642 [meta.py:probe():252] probe done
+2021-04-29 16:44:55,589 DEBUG   SenderThread:313642 [sender.py:send():173] send: files
+2021-04-29 16:44:55,589 INFO    SenderThread:313642 [sender.py:_save_file():808] saving file wandb-metadata.json with policy now
+2021-04-29 16:44:55,590 INFO    SenderThread:313642 [sender.py:_save_file():808] saving file code/train.py with policy now
+2021-04-29 16:44:55,590 INFO    SenderThread:313642 [sender.py:_save_file():808] saving file diff.patch with policy now
+2021-04-29 16:44:55,601 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:44:55,606 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:44:55,884 DEBUG   SenderThread:313642 [sender.py:send():173] send: config
+2021-04-29 16:44:56,135 DEBUG   SenderThread:313642 [sender.py:send():173] send: run
+2021-04-29 16:44:56,383 INFO    SenderThread:313642 [sender.py:send_run():582] updated run: 1e8ztnhh
+2021-04-29 16:45:11,695 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:45:11,707 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:45:24,445 DEBUG   SenderThread:313642 [sender.py:send():173] send: stats
+2021-04-29 16:45:27,670 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:45:27,671 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:45:43,821 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: stop_status
+2021-04-29 16:45:43,826 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: stop_status
+2021-04-29 16:45:48,567 DEBUG   SenderThread:313642 [sender.py:send():173] send: history
+2021-04-29 16:45:48,567 DEBUG   SenderThread:313642 [sender.py:send():173] send: summary
+2021-04-29 16:45:48,568 INFO    SenderThread:313642 [sender.py:_save_file():808] saving file wandb-summary.json with policy end
+2021-04-29 16:45:50,571 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:50,571 DEBUG   SenderThread:313642 [sender.py:send():173] send: telemetry
+2021-04-29 16:45:50,919 DEBUG   SenderThread:313642 [sender.py:send():173] send: exit
+2021-04-29 16:45:50,919 INFO    SenderThread:313642 [sender.py:send_exit():265] handling exit code: 0
+2021-04-29 16:45:50,920 INFO    SenderThread:313642 [sender.py:send_exit():273] send defer
+2021-04-29 16:45:50,920 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:50,921 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:50,921 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 0
+2021-04-29 16:45:50,921 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:50,921 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 0
+2021-04-29 16:45:50,921 INFO    SenderThread:313642 [sender.py:send_request_defer():318] send defer: 1
+2021-04-29 16:45:50,922 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:50,922 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 1
+2021-04-29 16:45:51,061 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:51,062 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 1
+2021-04-29 16:45:51,062 INFO    SenderThread:313642 [sender.py:send_request_defer():318] send defer: 2
+2021-04-29 16:45:51,062 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:51,063 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:51,063 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 2
+2021-04-29 16:45:51,063 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:51,064 DEBUG   SenderThread:313642 [sender.py:send():173] send: stats
+2021-04-29 16:45:51,064 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:51,064 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 2
+2021-04-29 16:45:51,065 INFO    SenderThread:313642 [sender.py:send_request_defer():318] send defer: 3
+2021-04-29 16:45:51,066 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:51,067 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 3
+2021-04-29 16:45:51,067 DEBUG   SenderThread:313642 [sender.py:send():173] send: summary
+2021-04-29 16:45:51,068 INFO    SenderThread:313642 [sender.py:_save_file():808] saving file wandb-summary.json with policy end
+2021-04-29 16:45:51,068 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:51,068 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 3
+2021-04-29 16:45:51,068 INFO    SenderThread:313642 [sender.py:send_request_defer():318] send defer: 4
+2021-04-29 16:45:51,069 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:51,069 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 4
+2021-04-29 16:45:51,069 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:51,069 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 4
+2021-04-29 16:45:51,167 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:51,672 INFO    SenderThread:313642 [sender.py:send_request_defer():318] send defer: 5
+2021-04-29 16:45:51,672 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:51,679 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:51,683 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 5
+2021-04-29 16:45:51,684 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:51,684 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 5
+2021-04-29 16:45:51,684 INFO    SenderThread:313642 [sender.py:send_request_defer():318] send defer: 6
+2021-04-29 16:45:51,687 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:51,687 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 6
+2021-04-29 16:45:51,687 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:51,687 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 6
+2021-04-29 16:45:51,774 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:52,025 INFO    SenderThread:313642 [sender.py:send_request_defer():318] send defer: 7
+2021-04-29 16:45:52,025 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:52,026 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:52,026 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 7
+2021-04-29 16:45:52,027 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:52,027 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 7
+2021-04-29 16:45:52,028 INFO    SenderThread:313642 [sender.py:send_request_defer():318] send defer: 8
+2021-04-29 16:45:52,028 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: defer
+2021-04-29 16:45:52,028 INFO    HandlerThread:313642 [handler.py:handle_request_defer():135] handle defer: 8
+2021-04-29 16:45:52,029 DEBUG   SenderThread:313642 [sender.py:send():173] send: final
+2021-04-29 16:45:52,029 DEBUG   SenderThread:313642 [sender.py:send():173] send: footer
+2021-04-29 16:45:52,029 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: defer
+2021-04-29 16:45:52,029 INFO    SenderThread:313642 [sender.py:send_request_defer():282] handle sender defer: 8
+2021-04-29 16:45:52,128 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:52,128 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:52,230 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:52,230 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:52,335 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:52,336 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:52,437 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:52,438 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:52,540 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:52,540 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:52,644 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: poll_exit
+2021-04-29 16:45:52,644 DEBUG   SenderThread:313642 [sender.py:send_request():183] send_request: poll_exit
+2021-04-29 16:45:52,648 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: get_summary
+2021-04-29 16:45:52,653 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: sampled_history
+2021-04-29 16:45:52,663 DEBUG   HandlerThread:313642 [handler.py:handle_request():121] handle_request: shutdown
+2021-04-29 16:45:52,664 INFO    HandlerThread:313642 [handler.py:finish():629] shutting down handler
+2021-04-29 16:45:53,029 INFO    WriterThread:313642 [datastore.py:close():258] close: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_164453-1e8ztnhh/run-1e8ztnhh.wandb
+2021-04-29 16:45:53,645 INFO    SenderThread:313642 [sender.py:finish():912] shutting down sender
+2021-04-29 16:45:53,648 INFO    MainThread:313642 [internal.py:handle_exit():78] Internal process exited
diff --git a/wandb/run-20210429_164453-1e8ztnhh/logs/debug.log b/wandb/run-20210429_164453-1e8ztnhh/logs/debug.log
new file mode 100644
index 0000000..feb7fcb
--- /dev/null
+++ b/wandb/run-20210429_164453-1e8ztnhh/logs/debug.log
@@ -0,0 +1,122 @@
+2021-04-29 16:44:53,487 INFO    MainThread:312928 [wandb_setup.py:_flush():69] setting env: {}
+2021-04-29 16:44:53,487 INFO    MainThread:312928 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-04-29 16:44:53,487 INFO    MainThread:312928 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-04-29 16:44:53,487 INFO    MainThread:312928 [wandb_init.py:_log_setup():336] Logging user logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_164453-1e8ztnhh/logs/debug.log
+2021-04-29 16:44:53,487 INFO    MainThread:312928 [wandb_init.py:_log_setup():337] Logging internal logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210429_164453-1e8ztnhh/logs/debug-internal.log
+2021-04-29 16:44:53,488 INFO    MainThread:312928 [wandb_init.py:init():369] calling init triggers
+2021-04-29 16:44:53,488 INFO    MainThread:312928 [wandb_init.py:init():376] wandb.init called with sweep_config: {}
+config: {'runs': 1, 'use_context': False, 'use_author': False, 'use_bert': True, 'use_target_text': False, 'use_target_audio': False, 'use_target_video': False, 'speaker_independent': False, 'embedding_dim': 300, 'word_embedding_path': '/home/sacastro/glove.840B.300d.txt', 'max_sent_length': 20, 'max_context_length': 4, 'num_classes': 2, 'epochs': 15, 'batch_size': 16, 'val_split': 0.1, 'model': 'gauss', 'run_name': 'gauss', 'svm_c': 10.0, 'svm_scale': True, 'svm_gamma': 'scale', 'svm_kernel': 'rbf', 'lsvc_c': 20, 'lsvc_max_iter': 10000}
+2021-04-29 16:44:53,488 INFO    MainThread:312928 [wandb_init.py:init():418] starting backend
+2021-04-29 16:44:53,488 INFO    MainThread:312928 [backend.py:_multiprocessing_setup():71] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2021-04-29 16:44:53,525 INFO    MainThread:312928 [backend.py:ensure_launched():123] starting backend process...
+2021-04-29 16:44:53,568 INFO    MainThread:312928 [backend.py:ensure_launched():128] started backend process with pid: 313642
+2021-04-29 16:44:53,570 INFO    MainThread:312928 [wandb_init.py:init():423] backend started and connected
+2021-04-29 16:44:53,574 INFO    MainThread:312928 [wandb_init.py:init():465] updated telemetry
+2021-04-29 16:44:53,575 INFO    MainThread:312928 [wandb_init.py:init():484] communicating current version
+2021-04-29 16:44:54,518 INFO    MainThread:312928 [wandb_init.py:init():489] got version response 
+2021-04-29 16:44:54,518 INFO    MainThread:312928 [wandb_init.py:init():497] communicating run to backend with 30 second timeout
+2021-04-29 16:44:54,904 INFO    MainThread:312928 [wandb_init.py:init():522] starting run threads in backend
+2021-04-29 16:44:55,598 INFO    MainThread:312928 [wandb_run.py:_console_start():1554] atexit reg
+2021-04-29 16:44:55,598 INFO    MainThread:312928 [wandb_run.py:_redirect():1401] redirect: SettingsConsole.REDIRECT
+2021-04-29 16:44:55,599 INFO    MainThread:312928 [wandb_run.py:_redirect():1406] Redirecting console.
+2021-04-29 16:44:55,603 INFO    MainThread:312928 [wandb_run.py:_redirect():1468] Redirects installed.
+2021-04-29 16:44:55,603 INFO    MainThread:312928 [wandb_init.py:init():546] run started, returning control to user process
+2021-04-29 16:44:55,604 INFO    MainThread:312928 [wandb_run.py:_config_callback():779] config_cb None None {'config_key': 'tav'}
+2021-04-29 16:45:48,565 INFO    MainThread:312928 [wandb_run.py:_atexit_cleanup():1524] got exitcode: 0
+2021-04-29 16:45:48,566 INFO    MainThread:312928 [wandb_run.py:_restore():1496] restore
+2021-04-29 16:45:50,921 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 2
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 19273
+  total_bytes: 19273
+}
+
+2021-04-29 16:45:51,065 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 2
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 19273
+  total_bytes: 19273
+}
+
+2021-04-29 16:45:51,673 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 2
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 19273
+  total_bytes: 19273
+}
+
+2021-04-29 16:45:52,027 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 19527
+  total_bytes: 22613
+}
+
+2021-04-29 16:45:52,129 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 22613
+  total_bytes: 22613
+}
+
+2021-04-29 16:45:52,231 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 22613
+  total_bytes: 22613
+}
+
+2021-04-29 16:45:52,336 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 22613
+  total_bytes: 22613
+}
+
+2021-04-29 16:45:52,438 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 22613
+  total_bytes: 22613
+}
+
+2021-04-29 16:45:52,542 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 22613
+  total_bytes: 22613
+}
+
+2021-04-29 16:45:52,646 INFO    MainThread:312928 [wandb_run.py:_wait_for_finish():1646] got exit ret: done: true
+exit_result {
+}
+file_counts {
+  wandb_count: 7
+  other_count: 1
+}
+pusher_stats {
+  uploaded_bytes: 22613
+  total_bytes: 22613
+}
+
+2021-04-29 16:45:53,854 INFO    MainThread:312928 [wandb_run.py:_show_summary():1801] rendering summary
+2021-04-29 16:45:53,854 INFO    MainThread:312928 [wandb_run.py:_show_history():1839] rendering history
+2021-04-29 16:45:53,855 INFO    MainThread:312928 [wandb_run.py:_show_files():1868] logging synced files
diff --git a/wandb/run-20210429_164453-1e8ztnhh/run-1e8ztnhh.wandb b/wandb/run-20210429_164453-1e8ztnhh/run-1e8ztnhh.wandb
new file mode 100644
index 0000000..9ae53c7
Binary files /dev/null and b/wandb/run-20210429_164453-1e8ztnhh/run-1e8ztnhh.wandb differ
diff --git a/wandb/run-20210502_131304-35ex21yx/files/code/train.py b/wandb/run-20210502_131304-35ex21yx/files/code/train.py
new file mode 100644
index 0000000..22548a7
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/files/code/train.py
@@ -0,0 +1,458 @@
+import argparse
+import json
+import os
+import re
+# import sys
+# from scipy.sparse.construct import random
+# import IPython
+# import ipdb
+import numpy as np
+from sklearn import svm
+from sklearn.ensemble import RandomForestClassifier
+from sklearn.linear_model import LogisticRegression
+from sklearn.metrics import classification_report, confusion_matrix
+from sklearn.naive_bayes import GaussianNB
+from sklearn.pipeline import make_pipeline
+from sklearn.preprocessing import FunctionTransformer, StandardScaler
+from sklearn.svm import LinearSVC
+# from fastai.vision import Learner
+# from fastai.vision import *
+# from fastai.vision.all import *
+from fastai.vision.learner import Learner
+import torch
+import torch.nn.functional as F
+from torch import nn
+import wandb
+
+import config
+from config import CONFIG_BY_KEY
+from data_loader import DataLoader
+from data_loader import DataHelper
+
+# breakpoint()
+# %%wandb
+wandb.login()
+WANDB_NOTEBOOK_NAME = 'train.py'
+
+
+class FullyConnectedNN(nn.Module):
+    def __init__(self):
+        # call constructor from superclass
+        super().__init__()
+
+        # define network layers
+        self.fc1 = nn.Linear(1503, 250, bias=True)
+        self.fc2 = nn.Linear(250, 2, bias=True)
+        # self.fc3 = nn.Linear(120, 2, bias=True)
+
+    def forward(self, xb):
+        # define forward pass
+        x = xb.float()
+        # x = xb.view(250, -1)
+        x = F.relu(self.fc1(x))
+        # x = F.relu(self.fc2(x))
+        x = torch.sigmoid(self.fc2(x))
+        # self.lin3(x)
+        return x
+
+
+def fcnn_train(train_input, train_output):
+    clf = FullyConnectedNN()
+    # print(clf)
+    fcnn_learner = Learner(data=data,
+                           model=clf,
+                           loss_func=nn.CrossEntropyLoss(),
+                           metrics=accuracy)
+    fcnn_learner.fit_one_cycle(5, 1e-2)
+
+
+def lsvc_train(train_input, train_output):
+    # clf = make_pipeline(
+    # StandardScaler(),
+    # svm.SVC(C=config.svm_c, gamma='scale', kernel='rbf'))
+    clf = LinearSVC(C=run_config.lsvc_c, max_iter=run_config.lsvc_max_iter)
+    # print(sys.executable)
+    return clf.fit(train_input, train_output[:, 1].astype(int))
+
+
+def lsvc_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def lr_train(train_input, train_output):
+    # lr = LogisticRegression(solver='saga',
+    #                         max_iter=10000,
+    #                         penalty='elasticnet',
+    #                         l1_ratio=1)
+    lr = LogisticRegression()
+    return lr.fit(train_input, train_output[:, 1].astype(int))
+
+
+def lr_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    print(confusion_matrix(y_true, y_pred))
+    print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def svm_train(train_input, train_output):
+    clf = make_pipeline(
+        StandardScaler() if run_config.svm_scale else FunctionTransformer(
+            lambda x: x, validate=False),
+        svm.SVC(C=run_config.svm_c,
+                gamma=run_config.svm_gamma,
+                kernel=run_config.svm_kernel))
+
+    return clf.fit(train_input, np.argmax(train_output, axis=1))
+
+
+def svm_test(clf, test_input, test_output):
+
+    probas = clf.predict(test_input)
+    y_pred = probas
+    y_true = np.argmax(test_output, axis=1)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def gauss_train(train_input, train_output):
+    gnb = GaussianNB()
+    return gnb.fit(train_input, train_output[:, 1].astype(int))
+
+
+def gauss_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def rfc_train(train_input, train_output):
+    rfc = RandomForestClassifier(n_estimators=10, random_state=0)
+    return rfc.fit(train_input, train_output[:, 1].astype(int))
+
+
+def rfc_test(clf, test_input, test_output):
+
+    y_pred = clf.predict(test_input)
+    y_true = test_output[:, 1].astype(int)
+
+    # To generate random scores
+    # y_pred = np.random.randint(2, size=len(y_pred))
+
+    # To generate majority baseline
+    # y_pred = [0]*len(y_pred)
+
+    result_string = classification_report(y_true, y_pred, digits=3)
+    # print(confusion_matrix(y_true, y_pred))
+    # print(result_string)
+    return classification_report(y_true, y_pred, output_dict=True,
+                                 digits=3), result_string
+
+
+def trainIO(train_index, test_index):
+
+    # Prepare data
+    train_input, train_output = data.getSplit(train_index)
+    test_input, test_output = data.getSplit(test_index)
+
+    datahelper = DataHelper(train_input, train_output, test_input, test_output,
+                            run_config, data)
+
+    train_input = np.empty((len(train_input), 0))
+    test_input = np.empty((len(test_input), 0))
+
+    if run_config.use_target_text:
+
+        if run_config.use_bert:
+            train_input = np.concatenate(
+                [train_input,
+                 datahelper.getTargetBertFeatures(mode='train')],
+                axis=1)
+            test_input = np.concatenate(
+                [test_input,
+                 datahelper.getTargetBertFeatures(mode='test')],
+                axis=1)
+        else:
+            train_input = np.concatenate([
+                train_input,
+                np.array([
+                    datahelper.pool_text(utt)
+                    for utt in datahelper.vectorizeUtterance(mode='train')
+                ])
+            ],
+                                         axis=1)
+            test_input = np.concatenate([
+                test_input,
+                np.array([
+                    datahelper.pool_text(utt)
+                    for utt in datahelper.vectorizeUtterance(mode='test')
+                ])
+            ],
+                                        axis=1)
+
+    if run_config.use_target_video:
+        train_input = np.concatenate(
+            [train_input,
+             datahelper.getTargetVideoPool(mode='train')], axis=1)
+        test_input = np.concatenate(
+            [test_input,
+             datahelper.getTargetVideoPool(mode='test')], axis=1)
+
+    if run_config.use_target_audio:
+        train_input = np.concatenate(
+            [train_input,
+             datahelper.getTargetAudioPool(mode='train')], axis=1)
+        test_input = np.concatenate(
+            [test_input,
+             datahelper.getTargetAudioPool(mode='test')], axis=1)
+
+    if train_input.shape[1] == 0:
+        print("Invalid modalities")
+        exit(1)
+
+    # Aux input
+
+    if run_config.use_author:
+        train_input_author = datahelper.getAuthor(mode="train")
+        test_input_author = datahelper.getAuthor(mode="test")
+
+        train_input = np.concatenate([train_input, train_input_author], axis=1)
+        test_input = np.concatenate([test_input, test_input_author], axis=1)
+
+    if run_config.use_context:
+        if run_config.use_bert:
+            train_input_context = datahelper.getContextBertFeatures(
+                mode="train")
+            test_input_context = datahelper.getContextBertFeatures(mode="test")
+        else:
+            train_input_context = datahelper.getContextPool(mode="train")
+            test_input_context = datahelper.getContextPool(mode="test")
+
+        train_input = np.concatenate([train_input, train_input_context],
+                                     axis=1)
+        test_input = np.concatenate([test_input, test_input_context], axis=1)
+
+    train_output = datahelper.oneHotOutput(mode="train",
+                                           size=run_config.num_classes)
+    test_output = datahelper.oneHotOutput(mode="test",
+                                          size=run_config.num_classes)
+
+    return train_input, train_output, test_input, test_output
+
+
+def trainSpeakerIndependent(model_name=None):
+
+    run_config.fold = "SI"
+
+    (train_index, test_index) = data.getSpeakerIndependent()
+    train_input, train_output, test_input, test_output = trainIO(
+        train_index, test_index)
+
+    train_func = CLF_MAP[args.clf][0]
+    test_func = CLF_MAP[args.clf][1]
+    clf = train_func(train_input, train_output)
+    test_func(clf, test_input, test_output)
+
+
+def trainSpeakerDependent(model_name=None):
+
+    print(vars(run_config))
+
+    config_params = {
+        k: v
+        for k, v in config.Config.__dict__.items()
+        if not (k.startswith('__') and k.endswith('__'))
+    }
+    # IPython.embed()
+    # breakpoint()
+    wandb.init(config=config_params, project="multimodal-sarcasm")
+    wandb.config.update({"config_key": args.config_key})
+    wandb.run.name = run_config.run_name + re.sub(r'^.*?-', '-',
+                                                  wandb.run.name)
+    # breakpoint()
+    # wandb.config.svm_c=config.svm_c
+
+    # Load data
+    data = DataLoader(run_config)
+    breakpoint()
+    # labels = ['Non-Sarcastic', 'Sarcastic']
+
+    # Iterating over each fold
+    results = []
+    for fold, (train_index,
+               test_index) in enumerate(data.getStratifiedKFold()):
+
+        # Present fold
+        run_config.fold = fold + 1
+        print("Present Fold: {}".format(run_config.fold))
+
+        train_input, train_output, test_input, test_output = trainIO(
+            train_index, test_index)
+
+        train_func = CLF_MAP[run_config.model][0]
+        # test_func = CLF_MAP[args.clf][1]
+        clf = train_func(train_input, train_output)
+
+        y_pred = clf.predict(test_input)
+        # y_probas = clf.predict_proba(test_input)
+        y_test = test_output[:, 1].astype(int)
+        # y_train = train_output[:, 1].astype(int)
+        # importances = clf.feature_importances_
+        # indices = np.argsort(importances)[::-1]
+
+        # To generate random scores
+        # y_pred = np.random.randint(2, size=len(y_pred))
+
+        # To generate majority baseline
+        # y_pred = [0]*len(y_pred)
+        # result_str = classification_report(y_true, y_pred, digits=3)
+        # print(confusion_matrix(y_true, y_pred))
+        # print(result_string)
+        result_dict = classification_report(y_test,
+                                            y_pred,
+                                            output_dict=True,
+                                            digits=3)
+
+        results.append(result_dict)
+        # wandb.sklearn.plot_classifier(clf,
+        #                               train_input,
+        #                               test_input,
+        #                               y_train,
+        #                               y_test,
+        #                               y_pred,
+        #                               y_probas,
+        #                               labels,
+        #                               model_name='args.clf',
+        #                               feature_names=None)
+        #
+    # Dumping result to output
+    if not os.path.exists(os.path.dirname(RESULT_FILE)):
+        os.makedirs(os.path.dirname(RESULT_FILE))
+    with open(RESULT_FILE.format(model_name), 'w') as file:
+        json.dump(results, file)
+
+
+def printResult(model_name=None):
+
+    results = json.load(open(RESULT_FILE.format(model_name), "rb"))
+
+    weighted_precision, weighted_recall = [], []
+    weighted_fscores = []
+
+    print("#" * 20)
+    for fold, result in enumerate(results):
+        weighted_fscores.append(result["weighted avg"]["f1-score"])
+        weighted_precision.append(result["weighted avg"]["precision"])
+        weighted_recall.append(result["weighted avg"]["recall"])
+
+        print("Fold {}:".format(fold + 1))
+        print(
+            "Weighted Precision: {}  Weighted Recall: {}  Weighted F score: {}"
+            .format(result["weighted avg"]["precision"],
+                    result["weighted avg"]["recall"],
+                    result["weighted avg"]["f1-score"]))
+    print("#" * 20)
+    print("Avg :")
+    precision = np.mean(weighted_precision)
+    recall = np.mean(weighted_recall)
+    fscore = np.mean(weighted_fscores)
+
+    wandb.log({
+        'weighted_precision': precision,
+        'weighted_recall': recall,
+        'weighted_fscore': fscore
+    })
+
+    print("Weighted Precision: {:.3f}  Weighted Recall: {:.3f}\
+        Weighted F score: {:.3f}".format(precision, recall, fscore))
+
+
+CLF_MAP = {
+    'lsvc': [lsvc_train, lsvc_test],
+    'lr': [lr_train, lr_test],
+    'rfc': [rfc_train, rfc_test],
+    'gauss': [gauss_train, gauss_test],
+    'svm': [svm_train, svm_test],
+    'fcnn': [fcnn_train, None]
+}
+
+# a=CLF_MAP['lr'][0]
+
+# print(a(train_input, train_output))
+
+
+def parse_args():
+    parser = argparse.ArgumentParser()
+    parser.add_argument('--config-key',
+                        default='',
+                        choices=list(CONFIG_BY_KEY.keys()))
+    # parser.add_argument('clf', choices=list(CLF_MAP.keys()))
+    return parser.parse_args()
+
+
+args = parse_args()
+print("Args:", args)
+
+RESULT_FILE = "./output/lsvc{}.json"
+
+# Load config
+run_config = CONFIG_BY_KEY[args.config_key]
+
+# Load data
+data = DataLoader(run_config)
+
+if __name__ == "__main__":
+
+    if run_config.speaker_independent:
+        trainSpeakerIndependent(model_name=run_config.model)
+    else:
+        for _ in range(run_config.runs):
+            trainSpeakerDependent(model_name=run_config.model)
+            printResult(model_name=run_config.model)
diff --git a/wandb/run-20210502_131304-35ex21yx/files/conda-environment.yaml b/wandb/run-20210502_131304-35ex21yx/files/conda-environment.yaml
new file mode 100644
index 0000000..7c96cd5
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/files/conda-environment.yaml
@@ -0,0 +1,4 @@
+name: mustard
+channels:
+  - defaults
+prefix: /home/miguel/miniconda3/envs/mustard/envs/mustard
diff --git a/wandb/run-20210502_131304-35ex21yx/files/config.yaml b/wandb/run-20210502_131304-35ex21yx/files/config.yaml
new file mode 100644
index 0000000..ec76e43
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/files/config.yaml
@@ -0,0 +1,95 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.10.28
+    code_path: code/train.py
+    framework: fastai
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.2
+    t:
+      1:
+      - 1
+      - 4
+      - 5
+      4: 3.7.2
+      5: 0.10.28
+      8:
+      - 5
+batch_size:
+  desc: null
+  value: 16
+config_key:
+  desc: null
+  value: tav
+embedding_dim:
+  desc: null
+  value: 300
+epochs:
+  desc: null
+  value: 15
+lsvc_c:
+  desc: null
+  value: 20
+lsvc_max_iter:
+  desc: null
+  value: 10000
+max_context_length:
+  desc: null
+  value: 4
+max_sent_length:
+  desc: null
+  value: 20
+model:
+  desc: null
+  value: gauss
+num_classes:
+  desc: null
+  value: 2
+run_name:
+  desc: null
+  value: gauss
+runs:
+  desc: null
+  value: 1
+speaker_independent:
+  desc: null
+  value: false
+svm_c:
+  desc: null
+  value: 10.0
+svm_gamma:
+  desc: null
+  value: scale
+svm_kernel:
+  desc: null
+  value: rbf
+svm_scale:
+  desc: null
+  value: true
+use_author:
+  desc: null
+  value: false
+use_bert:
+  desc: null
+  value: true
+use_context:
+  desc: null
+  value: false
+use_target_audio:
+  desc: null
+  value: false
+use_target_text:
+  desc: null
+  value: false
+use_target_video:
+  desc: null
+  value: false
+val_split:
+  desc: null
+  value: 0.1
+word_embedding_path:
+  desc: null
+  value: /home/sacastro/glove.840B.300d.txt
diff --git a/wandb/run-20210502_131304-35ex21yx/files/diff.patch b/wandb/run-20210502_131304-35ex21yx/files/diff.patch
new file mode 100644
index 0000000..4a4a84a
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/files/diff.patch
@@ -0,0 +1,147 @@
+diff --git a/config.py b/config.py
+index 856403f..e34a16b 100644
+--- a/config.py
++++ b/config.py
+@@ -23,7 +23,7 @@ class Config:
+     batch_size = 16
+     val_split = 0.1  # Percentage of data in validation set from training data
+ 
+-    model = 'lsvc'
++    model = 'gauss'
+     run_name = model
+ 
+     svm_c = 10.0
+diff --git a/train.py b/train.py
+index 122991c..22548a7 100644
+--- a/train.py
++++ b/train.py
+@@ -2,8 +2,10 @@ import argparse
+ import json
+ import os
+ import re
+-
+-import IPython
++# import sys
++# from scipy.sparse.construct import random
++# import IPython
++# import ipdb
+ import numpy as np
+ from sklearn import svm
+ from sklearn.ensemble import RandomForestClassifier
+@@ -13,6 +15,13 @@ from sklearn.naive_bayes import GaussianNB
+ from sklearn.pipeline import make_pipeline
+ from sklearn.preprocessing import FunctionTransformer, StandardScaler
+ from sklearn.svm import LinearSVC
++# from fastai.vision import Learner
++# from fastai.vision import *
++# from fastai.vision.all import *
++from fastai.vision.learner import Learner
++import torch
++import torch.nn.functional as F
++from torch import nn
+ import wandb
+ 
+ import config
+@@ -20,16 +29,49 @@ from config import CONFIG_BY_KEY
+ from data_loader import DataLoader
+ from data_loader import DataHelper
+ 
++# breakpoint()
+ # %%wandb
+ wandb.login()
+ WANDB_NOTEBOOK_NAME = 'train.py'
+ 
+ 
++class FullyConnectedNN(nn.Module):
++    def __init__(self):
++        # call constructor from superclass
++        super().__init__()
++
++        # define network layers
++        self.fc1 = nn.Linear(1503, 250, bias=True)
++        self.fc2 = nn.Linear(250, 2, bias=True)
++        # self.fc3 = nn.Linear(120, 2, bias=True)
++
++    def forward(self, xb):
++        # define forward pass
++        x = xb.float()
++        # x = xb.view(250, -1)
++        x = F.relu(self.fc1(x))
++        # x = F.relu(self.fc2(x))
++        x = torch.sigmoid(self.fc2(x))
++        # self.lin3(x)
++        return x
++
++
++def fcnn_train(train_input, train_output):
++    clf = FullyConnectedNN()
++    # print(clf)
++    fcnn_learner = Learner(data=data,
++                           model=clf,
++                           loss_func=nn.CrossEntropyLoss(),
++                           metrics=accuracy)
++    fcnn_learner.fit_one_cycle(5, 1e-2)
++
++
+ def lsvc_train(train_input, train_output):
+     # clf = make_pipeline(
+     # StandardScaler(),
+     # svm.SVC(C=config.svm_c, gamma='scale', kernel='rbf'))
+     clf = LinearSVC(C=run_config.lsvc_c, max_iter=run_config.lsvc_max_iter)
++    # print(sys.executable)
+     return clf.fit(train_input, train_output[:, 1].astype(int))
+ 
+ 
+@@ -279,6 +321,7 @@ def trainSpeakerDependent(model_name=None):
+ 
+     # Load data
+     data = DataLoader(run_config)
++    breakpoint()
+     # labels = ['Non-Sarcastic', 'Sarcastic']
+ 
+     # Iterating over each fold
+@@ -309,7 +352,6 @@ def trainSpeakerDependent(model_name=None):
+ 
+         # To generate majority baseline
+         # y_pred = [0]*len(y_pred)
+-
+         # result_str = classification_report(y_true, y_pred, digits=3)
+         # print(confusion_matrix(y_true, y_pred))
+         # print(result_string)
+@@ -377,7 +419,8 @@ CLF_MAP = {
+     'lr': [lr_train, lr_test],
+     'rfc': [rfc_train, rfc_test],
+     'gauss': [gauss_train, gauss_test],
+-    'svm': [svm_train, svm_test]
++    'svm': [svm_train, svm_test],
++    'fcnn': [fcnn_train, None]
+ }
+ 
+ # a=CLF_MAP['lr'][0]
+diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
+index d68616c..3ebda81 120000
+--- a/wandb/debug-internal.log
++++ b/wandb/debug-internal.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug-internal.log
+\ No newline at end of file
++run-20210502_131304-35ex21yx/logs/debug-internal.log
+\ No newline at end of file
+diff --git a/wandb/debug.log b/wandb/debug.log
+index d8b0872..57a35ff 120000
+--- a/wandb/debug.log
++++ b/wandb/debug.log
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j/logs/debug.log
+\ No newline at end of file
++run-20210502_131304-35ex21yx/logs/debug.log
+\ No newline at end of file
+diff --git a/wandb/latest-run b/wandb/latest-run
+index efe89a9..9277951 120000
+--- a/wandb/latest-run
++++ b/wandb/latest-run
+@@ -1 +1 @@
+-run-20210428_225551-th78is2j
+\ No newline at end of file
++run-20210502_131304-35ex21yx
+\ No newline at end of file
diff --git a/wandb/run-20210502_131304-35ex21yx/files/output.log b/wandb/run-20210502_131304-35ex21yx/files/output.log
new file mode 100644
index 0000000..e69de29
diff --git a/wandb/run-20210502_131304-35ex21yx/files/requirements.txt b/wandb/run-20210502_131304-35ex21yx/files/requirements.txt
new file mode 100644
index 0000000..a7aae56
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/files/requirements.txt
@@ -0,0 +1,134 @@
+argon2-cffi==20.1.0
+async-generator==1.10
+attrs==20.3.0
+backcall==0.2.0
+bleach==3.3.0
+brotlipy==0.7.0
+certifi==2020.12.5
+cffi==1.14.0
+chardet==4.0.0
+click==7.1.2
+colorama==0.4.3
+conda-package-handling==1.7.3
+conda==4.10.1
+configparser==5.0.2
+cryptography==3.4.7
+cycler==0.10.0
+cymem==1.31.2
+cytoolz==0.9.0.1
+decorator==5.0.6
+defusedxml==0.7.1
+dill==0.2.9
+docker-pycreds==0.4.0
+entrypoints==0.3
+fastai==2.3.0
+fastcore==1.3.19
+fastprogress==1.0.0
+flake8==3.9.1
+gitdb==4.0.7
+gitpython==3.1.15
+greenlet==1.0.0
+h5py==2.9.0
+idna==2.10
+importlib-metadata==4.0.1
+ipdb==0.13.7
+ipykernel==5.5.3
+ipython-genutils==0.2.0
+ipython==7.22.0
+jedi==0.17.2
+jinja2==2.11.3
+joblib==1.0.1
+jsonlines==1.2.0
+jsonschema==3.2.0
+jupyter-client==6.1.12
+jupyter-core==4.7.1
+jupyterlab-pygments==0.1.2
+kiwisolver==1.3.1
+lyricwikia==0.1.11
+mamba==0.12.0
+markupsafe==1.1.1
+matplotlib==3.3.4
+mccabe==0.6.1
+mistune==0.8.4
+mkl-fft==1.3.0
+mkl-random==1.2.1
+mkl-service==2.3.0
+msgpack-numpy==0.4.7.1
+msgpack==0.5.6
+murmurhash==0.28.0
+nbclient==0.5.3
+nbconvert==6.0.7
+nbformat==5.1.3
+nest-asyncio==1.5.1
+nltk==3.4.1
+notebook==6.3.0
+numpy==1.20.1
+olefile==0.46
+overrides==1.9
+packaging==20.9
+pandas==1.2.4
+pandocfilters==1.4.2
+parso==0.7.0
+pathtools==0.1.2
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==8.2.0
+pip==19.0.3
+plac==0.9.6
+preshed==1.0.1
+prometheus-client==0.10.1
+promise==2.3
+prompt-toolkit==3.0.17
+protobuf==3.15.8
+psutil==5.8.0
+ptyprocess==0.7.0
+pycodestyle==2.7.0
+pycosat==0.6.3
+pycparser==2.20
+pyflakes==2.3.1
+pygments==2.8.1
+pynvim==0.4.1
+pyopenssl==20.0.1
+pyparsing==2.4.7
+pyrsistent==0.17.3
+pysocks==1.7.1
+python-dateutil==2.8.1
+pytz==2021.1
+pyyaml==5.4.1
+pyzmq==22.0.3
+regex==2018.7.11
+requests==2.25.1
+ruamel-yaml-conda==0.15.100
+scikit-learn==0.24.2
+scipy==1.6.2
+send2trash==1.5.0
+sentry-sdk==1.0.0
+setuptools==52.0.0.post20210125
+shortuuid==1.0.1
+six==1.15.0
+smmap==4.0.0
+spacy==2.0.12
+spotify-cli-linux==1.6.0
+subprocess32==3.5.4
+termcolor==1.1.0
+terminado==0.9.4
+testpath==0.4.4
+thinc==6.10.3
+threadpoolctl==2.1.0
+tldr==0.5
+toolz==0.11.1
+torch==1.7.1
+torchvision==0.8.2
+tornado==6.1
+tqdm==4.31.1
+traitlets==5.0.5
+typing-extensions==3.7.4.3
+ujson==4.0.2
+urllib3==1.26.4
+wandb==0.10.28
+wcwidth==0.2.5
+webencodings==0.5.1
+wheel==0.36.2
+wrapt==1.10.11
+yapf==0.31.0
+zipp==3.4.1
\ No newline at end of file
diff --git a/wandb/run-20210502_131304-35ex21yx/files/wandb-metadata.json b/wandb/run-20210502_131304-35ex21yx/files/wandb-metadata.json
new file mode 100644
index 0000000..3a95f9e
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/files/wandb-metadata.json
@@ -0,0 +1,27 @@
+{
+    "os": "Linux-5.4.0-72-generic-x86_64-with-debian-bullseye-sid",
+    "python": "3.7.2",
+    "heartbeatAt": "2021-05-02T11:13:08.284019",
+    "startedAt": "2021-05-02T11:13:04.509408",
+    "docker": null,
+    "gpu": "GeForce 940MX",
+    "gpu_count": 1,
+    "cpu_count": 4,
+    "cuda": null,
+    "args": [
+        "--config-key",
+        "tav"
+    ],
+    "state": "running",
+    "program": "train.py",
+    "codePath": "train.py",
+    "git": {
+        "remote": "git@github.com:MiguelPax/MUStARD.git",
+        "commit": "96fbc572f36a36bb78eede03ab8b438294eb97b9"
+    },
+    "email": "miguelma@kth.se",
+    "root": "/home/miguel/Desktop/NLP/MUStARD",
+    "host": "guthrie",
+    "username": "miguel",
+    "executable": "/home/miguel/miniconda3/envs/mustard/bin/python3"
+}
diff --git a/wandb/run-20210502_131304-35ex21yx/files/wandb-summary.json b/wandb/run-20210502_131304-35ex21yx/files/wandb-summary.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/files/wandb-summary.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/wandb/run-20210502_131304-35ex21yx/logs/debug-internal.log b/wandb/run-20210502_131304-35ex21yx/logs/debug-internal.log
new file mode 100644
index 0000000..9df03a2
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/logs/debug-internal.log
@@ -0,0 +1,318 @@
+2021-05-02 13:13:07,841 INFO    MainThread:218781 [internal.py:wandb_internal():91] W&B internal server running at pid: 218781, started at: 2021-05-02 13:13:07.841449
+2021-05-02 13:13:07,843 INFO    WriterThread:218781 [datastore.py:open_for_write():77] open: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210502_131304-35ex21yx/run-35ex21yx.wandb
+2021-05-02 13:13:07,843 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: check_version
+2021-05-02 13:13:07,863 DEBUG   SenderThread:218781 [sender.py:send():173] send: header
+2021-05-02 13:13:07,863 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: check_version
+2021-05-02 13:13:07,959 DEBUG   SenderThread:218781 [sender.py:send():173] send: run
+2021-05-02 13:13:08,276 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: run_start
+2021-05-02 13:13:08,279 INFO    SenderThread:218781 [sender.py:_start_run_threads():681] run started: 35ex21yx with start time 1619953984
+2021-05-02 13:13:08,279 DEBUG   SenderThread:218781 [sender.py:send():173] send: summary
+2021-05-02 13:13:08,279 INFO    SenderThread:218781 [sender.py:_save_file():808] saving file wandb-summary.json with policy end
+2021-05-02 13:13:08,283 DEBUG   HandlerThread:218781 [meta.py:__init__():39] meta init
+2021-05-02 13:13:08,283 DEBUG   HandlerThread:218781 [meta.py:__init__():53] meta init done
+2021-05-02 13:13:08,283 DEBUG   HandlerThread:218781 [meta.py:probe():210] probe
+2021-05-02 13:13:08,291 DEBUG   HandlerThread:218781 [meta.py:_setup_git():200] setup git
+2021-05-02 13:13:08,312 DEBUG   HandlerThread:218781 [meta.py:_setup_git():207] setup git done
+2021-05-02 13:13:08,312 DEBUG   HandlerThread:218781 [meta.py:_save_code():89] save code
+2021-05-02 13:13:08,322 DEBUG   HandlerThread:218781 [meta.py:_save_code():110] save code done
+2021-05-02 13:13:08,323 DEBUG   HandlerThread:218781 [meta.py:_save_patches():127] save patches
+2021-05-02 13:13:08,404 DEBUG   HandlerThread:218781 [meta.py:_save_patches():169] save patches done
+2021-05-02 13:13:08,404 DEBUG   HandlerThread:218781 [meta.py:_save_pip():57] save pip
+2021-05-02 13:13:08,405 DEBUG   HandlerThread:218781 [meta.py:_save_pip():71] save pip done
+2021-05-02 13:13:08,405 DEBUG   HandlerThread:218781 [meta.py:_save_conda():78] save conda
+2021-05-02 13:13:09,720 DEBUG   HandlerThread:218781 [meta.py:_save_conda():86] save conda done
+2021-05-02 13:13:09,721 DEBUG   HandlerThread:218781 [meta.py:probe():252] probe done
+2021-05-02 13:13:09,724 DEBUG   SenderThread:218781 [sender.py:send():173] send: files
+2021-05-02 13:13:09,725 INFO    SenderThread:218781 [sender.py:_save_file():808] saving file wandb-metadata.json with policy now
+2021-05-02 13:13:09,725 INFO    SenderThread:218781 [sender.py:_save_file():808] saving file code/train.py with policy now
+2021-05-02 13:13:09,726 INFO    SenderThread:218781 [sender.py:_save_file():808] saving file diff.patch with policy now
+2021-05-02 13:13:09,730 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:13:09,732 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:13:09,994 DEBUG   SenderThread:218781 [sender.py:send():173] send: config
+2021-05-02 13:13:10,373 DEBUG   SenderThread:218781 [sender.py:send():173] send: run
+2021-05-02 13:13:10,714 INFO    SenderThread:218781 [sender.py:send_run():582] updated run: 35ex21yx
+2021-05-02 13:13:25,896 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:13:25,897 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:13:36,834 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:13:41,761 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:13:41,767 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:13:58,141 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:13:58,147 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:14:07,370 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:14:14,794 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:14:14,822 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:14:30,313 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:14:30,316 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:14:38,294 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:14:46,173 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:14:46,173 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:15:01,694 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:15:01,694 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:15:08,546 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:15:16,895 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:15:16,895 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:15:32,116 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:15:32,117 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:15:38,778 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:15:47,347 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:15:47,347 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:16:02,603 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:16:02,604 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:16:08,998 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:16:17,818 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:16:17,819 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:16:33,281 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:16:33,282 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:16:39,219 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:16:48,479 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:16:48,480 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:17:03,673 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:17:03,674 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:17:09,426 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:17:18,893 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:17:18,894 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:17:34,384 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:17:34,385 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:17:39,695 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:17:49,664 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:17:49,664 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:18:04,896 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:18:05,107 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:18:10,007 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:18:20,815 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:18:20,816 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:18:36,016 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:18:36,016 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:18:40,249 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:18:51,213 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:18:51,214 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:19:06,415 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:19:06,416 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:19:10,472 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:19:21,638 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:19:21,638 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:19:36,856 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:19:36,867 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:19:40,729 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:19:52,120 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:19:52,238 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:20:08,957 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:20:09,058 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:20:12,936 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:20:25,057 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:20:25,057 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:20:40,278 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:20:40,278 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:20:43,180 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:20:55,689 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:20:55,689 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:21:10,959 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:21:10,960 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:21:13,423 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:21:26,218 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:21:26,218 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:21:41,455 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:21:41,455 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:21:43,852 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:21:56,749 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:21:56,749 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:22:11,972 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:22:12,105 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:22:14,442 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:22:27,388 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:22:27,388 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:22:42,610 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:22:42,610 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:22:44,729 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:22:57,900 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:22:57,900 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:23:13,097 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:23:13,097 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:23:14,997 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:23:28,294 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:23:28,295 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:23:43,496 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:23:43,496 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:23:45,381 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:23:58,692 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:23:58,693 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:24:13,890 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:24:13,890 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:24:15,664 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:24:29,157 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:24:29,157 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:24:44,355 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:24:44,356 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:24:45,926 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:24:59,578 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:24:59,578 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:25:14,777 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:25:14,777 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:25:16,290 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:25:29,984 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:25:29,985 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:25:45,425 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:25:45,425 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:25:46,588 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:26:00,624 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:26:00,624 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:26:16,886 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:26:17,936 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:26:17,936 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:26:33,198 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:26:33,198 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:26:47,180 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:26:48,452 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:26:48,453 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:27:03,658 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:27:03,658 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:27:17,445 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:27:18,884 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:27:18,885 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:27:34,090 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:27:34,090 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:27:47,713 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:27:49,286 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:27:49,287 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:28:04,489 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:28:04,490 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:28:17,990 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:28:19,688 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:28:19,688 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:28:34,885 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:28:34,885 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:28:48,280 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:28:50,192 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:28:50,192 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:29:05,517 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:29:05,519 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:29:18,620 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:29:20,741 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:29:20,742 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:29:35,966 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:29:35,967 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:29:48,891 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:29:51,164 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:29:51,165 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:30:06,365 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:30:06,365 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:30:19,199 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:30:21,600 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:30:21,600 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:30:36,798 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:30:36,798 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:30:49,521 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:30:52,000 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:30:52,000 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:31:07,201 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:31:07,201 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:31:19,842 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:31:22,466 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:31:22,466 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:31:37,686 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:31:37,687 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:31:50,085 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:31:52,994 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:31:52,995 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:32:08,229 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:32:08,229 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:32:20,361 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:32:23,559 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:32:23,560 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:32:38,765 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:32:38,765 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:32:50,675 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:32:53,992 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:32:53,993 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:33:09,236 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:33:09,236 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:33:20,980 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:33:24,433 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:33:24,433 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:33:39,737 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:33:39,738 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:33:51,257 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:33:54,941 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:33:54,941 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:34:10,162 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:34:10,162 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:34:21,530 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:34:25,407 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:34:25,408 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:34:40,631 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:34:40,631 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:34:51,839 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:34:55,849 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:34:55,849 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:35:11,054 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:35:11,054 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:35:22,120 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:35:26,282 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:35:26,282 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:35:41,492 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:35:41,493 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:35:52,469 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:35:56,702 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:35:56,702 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:36:12,118 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:36:12,118 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:36:22,792 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:36:27,316 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:36:27,317 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:36:42,534 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:36:42,534 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:36:53,101 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:36:57,780 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:36:57,780 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:37:13,021 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:37:13,022 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:37:23,377 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:37:28,259 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:37:28,260 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:37:43,475 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:37:43,476 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:37:53,848 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:37:58,777 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:37:58,777 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:38:14,286 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:38:14,286 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:38:24,168 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:38:29,547 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:38:29,547 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:38:44,744 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:38:44,774 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:38:54,499 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:39:00,018 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:39:00,220 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:39:15,421 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:39:15,422 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:39:24,867 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:39:30,681 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:39:30,681 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:39:46,044 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:39:46,045 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:39:55,157 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:40:01,239 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:40:01,239 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:40:16,798 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:40:16,798 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:40:25,435 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:40:31,998 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:40:31,999 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:40:47,236 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:40:47,236 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:40:55,683 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:41:02,448 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:41:02,449 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:41:17,641 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:41:17,642 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:41:25,976 DEBUG   SenderThread:218781 [sender.py:send():173] send: stats
+2021-05-02 13:41:27,863 WARNING MainThread:218781 [internal.py:wandb_internal():146] Internal process interrupt: 1
+2021-05-02 13:41:32,842 DEBUG   HandlerThread:218781 [handler.py:handle_request():121] handle_request: stop_status
+2021-05-02 13:41:32,842 DEBUG   SenderThread:218781 [sender.py:send_request():183] send_request: stop_status
+2021-05-02 13:41:34,902 WARNING MainThread:218781 [internal.py:wandb_internal():146] Internal process interrupt: 2
+2021-05-02 13:41:34,902 ERROR   MainThread:218781 [internal.py:wandb_internal():149] Internal process interrupted.
+2021-05-02 13:41:35,084 INFO    HandlerThread:218781 [handler.py:finish():629] shutting down handler
+2021-05-02 13:41:35,145 INFO    WriterThread:218781 [datastore.py:close():258] close: /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210502_131304-35ex21yx/run-35ex21yx.wandb
+2021-05-02 13:41:35,610 INFO    SenderThread:218781 [sender.py:finish():912] shutting down sender
+2021-05-02 13:41:37,736 INFO    MainThread:218781 [internal.py:handle_exit():78] Internal process exited
diff --git a/wandb/run-20210502_131304-35ex21yx/logs/debug.log b/wandb/run-20210502_131304-35ex21yx/logs/debug.log
new file mode 100644
index 0000000..23af608
--- /dev/null
+++ b/wandb/run-20210502_131304-35ex21yx/logs/debug.log
@@ -0,0 +1,26 @@
+2021-05-02 13:13:04,522 INFO    MainThread:216648 [wandb_setup.py:_flush():69] setting env: {}
+2021-05-02 13:13:04,522 INFO    MainThread:216648 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-05-02 13:13:04,523 INFO    MainThread:216648 [wandb_setup.py:_flush():69] setting login settings: {}
+2021-05-02 13:13:04,523 INFO    MainThread:216648 [wandb_init.py:_log_setup():336] Logging user logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210502_131304-35ex21yx/logs/debug.log
+2021-05-02 13:13:04,523 INFO    MainThread:216648 [wandb_init.py:_log_setup():337] Logging internal logs to /home/miguel/Desktop/NLP/MUStARD/wandb/run-20210502_131304-35ex21yx/logs/debug-internal.log
+2021-05-02 13:13:04,523 INFO    MainThread:216648 [wandb_init.py:init():369] calling init triggers
+2021-05-02 13:13:04,523 INFO    MainThread:216648 [wandb_init.py:init():376] wandb.init called with sweep_config: {}
+config: {'runs': 1, 'use_context': False, 'use_author': False, 'use_bert': True, 'use_target_text': False, 'use_target_audio': False, 'use_target_video': False, 'speaker_independent': False, 'embedding_dim': 300, 'word_embedding_path': '/home/sacastro/glove.840B.300d.txt', 'max_sent_length': 20, 'max_context_length': 4, 'num_classes': 2, 'epochs': 15, 'batch_size': 16, 'val_split': 0.1, 'model': 'gauss', 'run_name': 'gauss', 'svm_c': 10.0, 'svm_scale': True, 'svm_gamma': 'scale', 'svm_kernel': 'rbf', 'lsvc_c': 20, 'lsvc_max_iter': 10000}
+2021-05-02 13:13:04,524 INFO    MainThread:216648 [wandb_init.py:init():418] starting backend
+2021-05-02 13:13:04,524 INFO    MainThread:216648 [backend.py:_multiprocessing_setup():71] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2021-05-02 13:13:04,578 INFO    MainThread:216648 [backend.py:ensure_launched():123] starting backend process...
+2021-05-02 13:13:04,657 INFO    MainThread:216648 [backend.py:ensure_launched():128] started backend process with pid: 218781
+2021-05-02 13:13:04,664 INFO    MainThread:216648 [wandb_init.py:init():423] backend started and connected
+2021-05-02 13:13:04,809 INFO    MainThread:216648 [wandb_init.py:init():465] updated telemetry
+2021-05-02 13:13:04,809 INFO    MainThread:216648 [wandb_init.py:init():484] communicating current version
+2021-05-02 13:13:07,957 INFO    MainThread:216648 [wandb_init.py:init():489] got version response 
+2021-05-02 13:13:07,957 INFO    MainThread:216648 [wandb_init.py:init():497] communicating run to backend with 30 second timeout
+2021-05-02 13:13:08,275 INFO    MainThread:216648 [wandb_init.py:init():522] starting run threads in backend
+2021-05-02 13:13:09,728 INFO    MainThread:216648 [wandb_run.py:_console_start():1554] atexit reg
+2021-05-02 13:13:09,729 INFO    MainThread:216648 [wandb_run.py:_redirect():1401] redirect: SettingsConsole.REDIRECT
+2021-05-02 13:13:09,730 INFO    MainThread:216648 [wandb_run.py:_redirect():1406] Redirecting console.
+2021-05-02 13:13:09,747 INFO    MainThread:216648 [wandb_run.py:_redirect():1468] Redirects installed.
+2021-05-02 13:13:09,747 INFO    MainThread:216648 [wandb_init.py:init():546] run started, returning control to user process
+2021-05-02 13:13:09,747 INFO    MainThread:216648 [wandb_run.py:_config_callback():779] config_cb None None {'config_key': 'tav'}
+2021-05-02 22:32:06,451 INFO    MainThread:216648 [wandb_run.py:_atexit_cleanup():1524] got exitcode: 0
+2021-05-02 22:32:06,455 INFO    MainThread:216648 [wandb_run.py:_restore():1496] restore
diff --git a/wandb/run-20210502_131304-35ex21yx/run-35ex21yx.wandb b/wandb/run-20210502_131304-35ex21yx/run-35ex21yx.wandb
new file mode 100644
index 0000000..8390920
Binary files /dev/null and b/wandb/run-20210502_131304-35ex21yx/run-35ex21yx.wandb differ
